### YamlMime:ManagedReference
items:
- uid: MacacaGames.EffectSystem.EffectManager.EffectableObjectInfo
  commentId: T:MacacaGames.EffectSystem.EffectManager.EffectableObjectInfo
  id: EffectManager.EffectableObjectInfo
  parent: MacacaGames.EffectSystem
  children:
  - MacacaGames.EffectSystem.EffectManager.EffectableObjectInfo.activeCondition
  - MacacaGames.EffectSystem.EffectManager.EffectableObjectInfo.deactiveCondition
  - MacacaGames.EffectSystem.EffectManager.EffectableObjectInfo.effectLists
  langs:
  - csharp
  - vb
  name: EffectManager.EffectableObjectInfo
  nameWithType: EffectManager.EffectableObjectInfo
  fullName: MacacaGames.EffectSystem.EffectManager.EffectableObjectInfo
  type: Class
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: EffectableObjectInfo
    path: ../Runtime/EffectManager.cs
    startLine: 165
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: 'public class EffectableObjectInfo : object'
    content.vb: >-
      Public Class EffectableObjectInfo
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: MacacaGames.EffectSystem.EffectManager.EffectableObjectInfo.effectLists
  commentId: F:MacacaGames.EffectSystem.EffectManager.EffectableObjectInfo.effectLists
  id: effectLists
  parent: MacacaGames.EffectSystem.EffectManager.EffectableObjectInfo
  langs:
  - csharp
  - vb
  name: effectLists
  nameWithType: EffectManager.EffectableObjectInfo.effectLists
  fullName: MacacaGames.EffectSystem.EffectManager.EffectableObjectInfo.effectLists
  type: Field
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: effectLists
    path: ../Runtime/EffectManager.cs
    startLine: 167
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public Dictionary<string, EffectManager.EffectList> effectLists
    return:
      type: Dictionary{System.String,MacacaGames.EffectSystem.EffectManager.EffectList}
    content.vb: Public effectLists As Dictionary(Of String, EffectManager.EffectList)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.EffectableObjectInfo.activeCondition
  commentId: F:MacacaGames.EffectSystem.EffectManager.EffectableObjectInfo.activeCondition
  id: activeCondition
  parent: MacacaGames.EffectSystem.EffectManager.EffectableObjectInfo
  langs:
  - csharp
  - vb
  name: activeCondition
  nameWithType: EffectManager.EffectableObjectInfo.activeCondition
  fullName: MacacaGames.EffectSystem.EffectManager.EffectableObjectInfo.activeCondition
  type: Field
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: activeCondition
    path: ../Runtime/EffectManager.cs
    startLine: 168
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public Dictionary<string, Action<EffectManager.EffectTriggerConditionInfo>> activeCondition
    return:
      type: Dictionary{System.String,Action{MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo}}
    content.vb: Public activeCondition As Dictionary(Of String, Action(Of EffectManager.EffectTriggerConditionInfo))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.EffectableObjectInfo.deactiveCondition
  commentId: F:MacacaGames.EffectSystem.EffectManager.EffectableObjectInfo.deactiveCondition
  id: deactiveCondition
  parent: MacacaGames.EffectSystem.EffectManager.EffectableObjectInfo
  langs:
  - csharp
  - vb
  name: deactiveCondition
  nameWithType: EffectManager.EffectableObjectInfo.deactiveCondition
  fullName: MacacaGames.EffectSystem.EffectManager.EffectableObjectInfo.deactiveCondition
  type: Field
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: deactiveCondition
    path: ../Runtime/EffectManager.cs
    startLine: 169
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public Dictionary<string, Action<EffectManager.EffectTriggerConditionInfo>> deactiveCondition
    return:
      type: Dictionary{System.String,Action{MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo}}
    content.vb: Public deactiveCondition As Dictionary(Of String, Action(Of EffectManager.EffectTriggerConditionInfo))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: MacacaGames.EffectSystem
  commentId: N:MacacaGames.EffectSystem
  name: MacacaGames.EffectSystem
  nameWithType: MacacaGames.EffectSystem
  fullName: MacacaGames.EffectSystem
- uid: Dictionary{System.String,MacacaGames.EffectSystem.EffectManager.EffectList}
  commentId: '!:Dictionary{System.String,MacacaGames.EffectSystem.EffectManager.EffectList}'
  definition: Dictionary`2
  name: Dictionary<String, EffectManager.EffectList>
  nameWithType: Dictionary<String, EffectManager.EffectList>
  fullName: Dictionary<System.String, MacacaGames.EffectSystem.EffectManager.EffectList>
  nameWithType.vb: Dictionary(Of String, EffectManager.EffectList)
  fullName.vb: Dictionary(Of System.String, MacacaGames.EffectSystem.EffectManager.EffectList)
  name.vb: Dictionary(Of String, EffectManager.EffectList)
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MacacaGames.EffectSystem.EffectManager.EffectList
    name: EffectManager.EffectList
    nameWithType: EffectManager.EffectList
    fullName: MacacaGames.EffectSystem.EffectManager.EffectList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MacacaGames.EffectSystem.EffectManager.EffectList
    name: EffectManager.EffectList
    nameWithType: EffectManager.EffectList
    fullName: MacacaGames.EffectSystem.EffectManager.EffectList
  - name: )
    nameWithType: )
    fullName: )
- uid: Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Dictionary{System.String,Action{MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo}}
  commentId: '!:Dictionary{System.String,Action{MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo}}'
  definition: Dictionary`2
  name: Dictionary<String, Action<EffectManager.EffectTriggerConditionInfo>>
  nameWithType: Dictionary<String, Action<EffectManager.EffectTriggerConditionInfo>>
  fullName: Dictionary<System.String, Action<MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo>>
  nameWithType.vb: Dictionary(Of String, Action(Of EffectManager.EffectTriggerConditionInfo))
  fullName.vb: Dictionary(Of System.String, Action(Of MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo))
  name.vb: Dictionary(Of String, Action(Of EffectManager.EffectTriggerConditionInfo))
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo
    name: EffectManager.EffectTriggerConditionInfo
    nameWithType: EffectManager.EffectTriggerConditionInfo
    fullName: MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo
    name: EffectManager.EffectTriggerConditionInfo
    nameWithType: EffectManager.EffectTriggerConditionInfo
    fullName: MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
