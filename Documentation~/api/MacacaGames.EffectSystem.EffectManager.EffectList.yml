### YamlMime:ManagedReference
items:
- uid: MacacaGames.EffectSystem.EffectManager.EffectList
  commentId: T:MacacaGames.EffectSystem.EffectManager.EffectList
  id: EffectManager.EffectList
  parent: MacacaGames.EffectSystem
  children:
  - MacacaGames.EffectSystem.EffectManager.EffectList.#ctor(System.String)
  - MacacaGames.EffectSystem.EffectManager.EffectList.Add(MacacaGames.EffectSystem.EffectBase)
  - MacacaGames.EffectSystem.EffectManager.EffectList.Clear
  - MacacaGames.EffectSystem.EffectManager.EffectList.Contains(MacacaGames.EffectSystem.EffectBase)
  - MacacaGames.EffectSystem.EffectManager.EffectList.CopyTo(MacacaGames.EffectSystem.EffectBase[],System.Int32)
  - MacacaGames.EffectSystem.EffectManager.EffectList.Count
  - MacacaGames.EffectSystem.EffectManager.EffectList.GetEnumerator
  - MacacaGames.EffectSystem.EffectManager.EffectList.GetSum
  - MacacaGames.EffectSystem.EffectManager.EffectList.IsReadOnly
  - MacacaGames.EffectSystem.EffectManager.EffectList.isSumOutOfLimit
  - MacacaGames.EffectSystem.EffectManager.EffectList.Remove(MacacaGames.EffectSystem.EffectBase)
  - MacacaGames.EffectSystem.EffectManager.EffectList.SetDirty(System.Boolean)
  - MacacaGames.EffectSystem.EffectManager.EffectList.sumLimitMax
  - MacacaGames.EffectSystem.EffectManager.EffectList.sumLimitMin
  langs:
  - csharp
  - vb
  name: EffectManager.EffectList
  nameWithType: EffectManager.EffectList
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList
  type: Class
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: EffectList
    path: ../Runtime/EffectManager.cs
    startLine: 67
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: 'public class EffectList : ICollection<EffectBase>'
    content.vb: >-
      Public Class EffectList
          Inherits ICollection(Of EffectBase)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.Count
  commentId: P:MacacaGames.EffectSystem.EffectManager.EffectList.Count
  id: Count
  parent: MacacaGames.EffectSystem.EffectManager.EffectList
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: EffectManager.EffectList.Count
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.Count
  type: Property
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: Count
    path: ../Runtime/EffectManager.cs
    startLine: 71
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: MacacaGames.EffectSystem.EffectManager.EffectList.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.sumLimitMax
  commentId: P:MacacaGames.EffectSystem.EffectManager.EffectList.sumLimitMax
  id: sumLimitMax
  parent: MacacaGames.EffectSystem.EffectManager.EffectList
  langs:
  - csharp
  - vb
  name: sumLimitMax
  nameWithType: EffectManager.EffectList.sumLimitMax
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.sumLimitMax
  type: Property
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: sumLimitMax
    path: ../Runtime/EffectManager.cs
    startLine: 75
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public float sumLimitMax { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property sumLimitMax As Single
  overload: MacacaGames.EffectSystem.EffectManager.EffectList.sumLimitMax*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.sumLimitMin
  commentId: P:MacacaGames.EffectSystem.EffectManager.EffectList.sumLimitMin
  id: sumLimitMin
  parent: MacacaGames.EffectSystem.EffectManager.EffectList
  langs:
  - csharp
  - vb
  name: sumLimitMin
  nameWithType: EffectManager.EffectList.sumLimitMin
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.sumLimitMin
  type: Property
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: sumLimitMin
    path: ../Runtime/EffectManager.cs
    startLine: 76
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public float sumLimitMin { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property sumLimitMin As Single
  overload: MacacaGames.EffectSystem.EffectManager.EffectList.sumLimitMin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.Add(MacacaGames.EffectSystem.EffectBase)
  commentId: M:MacacaGames.EffectSystem.EffectManager.EffectList.Add(MacacaGames.EffectSystem.EffectBase)
  id: Add(MacacaGames.EffectSystem.EffectBase)
  parent: MacacaGames.EffectSystem.EffectManager.EffectList
  langs:
  - csharp
  - vb
  name: Add(EffectBase)
  nameWithType: EffectManager.EffectList.Add(EffectBase)
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.Add(MacacaGames.EffectSystem.EffectBase)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: Add
    path: ../Runtime/EffectManager.cs
    startLine: 78
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public void Add(EffectBase effect)
    parameters:
    - id: effect
      type: MacacaGames.EffectSystem.EffectBase
    content.vb: Public Sub Add(effect As EffectBase)
  overload: MacacaGames.EffectSystem.EffectManager.EffectList.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.Remove(MacacaGames.EffectSystem.EffectBase)
  commentId: M:MacacaGames.EffectSystem.EffectManager.EffectList.Remove(MacacaGames.EffectSystem.EffectBase)
  id: Remove(MacacaGames.EffectSystem.EffectBase)
  parent: MacacaGames.EffectSystem.EffectManager.EffectList
  langs:
  - csharp
  - vb
  name: Remove(EffectBase)
  nameWithType: EffectManager.EffectList.Remove(EffectBase)
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.Remove(MacacaGames.EffectSystem.EffectBase)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: Remove
    path: ../Runtime/EffectManager.cs
    startLine: 83
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public bool Remove(EffectBase effect)
    parameters:
    - id: effect
      type: MacacaGames.EffectSystem.EffectBase
    return:
      type: System.Boolean
    content.vb: Public Function Remove(effect As EffectBase) As Boolean
  overload: MacacaGames.EffectSystem.EffectManager.EffectList.Remove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.#ctor(System.String)
  commentId: M:MacacaGames.EffectSystem.EffectManager.EffectList.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: MacacaGames.EffectSystem.EffectManager.EffectList
  langs:
  - csharp
  - vb
  name: EffectList(String)
  nameWithType: EffectManager.EffectList.EffectList(String)
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.EffectList(System.String)
  type: Constructor
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: .ctor
    path: ../Runtime/EffectManager.cs
    startLine: 90
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public EffectList(string effectType)
    parameters:
    - id: effectType
      type: System.String
    content.vb: Public Sub New(effectType As String)
  overload: MacacaGames.EffectSystem.EffectManager.EffectList.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.SetDirty(System.Boolean)
  commentId: M:MacacaGames.EffectSystem.EffectManager.EffectList.SetDirty(System.Boolean)
  id: SetDirty(System.Boolean)
  parent: MacacaGames.EffectSystem.EffectManager.EffectList
  langs:
  - csharp
  - vb
  name: SetDirty(Boolean)
  nameWithType: EffectManager.EffectList.SetDirty(Boolean)
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.SetDirty(System.Boolean)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: SetDirty
    path: ../Runtime/EffectManager.cs
    startLine: 101
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public void SetDirty(bool b)
    parameters:
    - id: b
      type: System.Boolean
    content.vb: Public Sub SetDirty(b As Boolean)
  overload: MacacaGames.EffectSystem.EffectManager.EffectList.SetDirty*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.GetSum
  commentId: M:MacacaGames.EffectSystem.EffectManager.EffectList.GetSum
  id: GetSum
  parent: MacacaGames.EffectSystem.EffectManager.EffectList
  langs:
  - csharp
  - vb
  name: GetSum()
  nameWithType: EffectManager.EffectList.GetSum()
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.GetSum()
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: GetSum
    path: ../Runtime/EffectManager.cs
    startLine: 103
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public float GetSum()
    return:
      type: System.Single
    content.vb: Public Function GetSum As Single
  overload: MacacaGames.EffectSystem.EffectManager.EffectList.GetSum*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.isSumOutOfLimit
  commentId: P:MacacaGames.EffectSystem.EffectManager.EffectList.isSumOutOfLimit
  id: isSumOutOfLimit
  parent: MacacaGames.EffectSystem.EffectManager.EffectList
  langs:
  - csharp
  - vb
  name: isSumOutOfLimit
  nameWithType: EffectManager.EffectList.isSumOutOfLimit
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.isSumOutOfLimit
  type: Property
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: isSumOutOfLimit
    path: ../Runtime/EffectManager.cs
    startLine: 127
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  summary: 判斷加總值是否超出上下限，若大於等於上限或小於下限視為超出。
  example: []
  syntax:
    content: public bool isSumOutOfLimit { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isSumOutOfLimit As Boolean
  overload: MacacaGames.EffectSystem.EffectManager.EffectList.isSumOutOfLimit*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.IsReadOnly
  commentId: P:MacacaGames.EffectSystem.EffectManager.EffectList.IsReadOnly
  id: IsReadOnly
  parent: MacacaGames.EffectSystem.EffectManager.EffectList
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: EffectManager.EffectList.IsReadOnly
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.IsReadOnly
  type: Property
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: IsReadOnly
    path: ../Runtime/EffectManager.cs
    startLine: 136
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: MacacaGames.EffectSystem.EffectManager.EffectList.IsReadOnly*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.GetEnumerator
  commentId: M:MacacaGames.EffectSystem.EffectManager.EffectList.GetEnumerator
  id: GetEnumerator
  parent: MacacaGames.EffectSystem.EffectManager.EffectList
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: EffectManager.EffectList.GetEnumerator()
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.GetEnumerator()
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: GetEnumerator
    path: ../Runtime/EffectManager.cs
    startLine: 138
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public IEnumerator<EffectBase> GetEnumerator()
    return:
      type: IEnumerator{MacacaGames.EffectSystem.EffectBase}
    content.vb: Public Function GetEnumerator As IEnumerator(Of EffectBase)
  overload: MacacaGames.EffectSystem.EffectManager.EffectList.GetEnumerator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.Clear
  commentId: M:MacacaGames.EffectSystem.EffectManager.EffectList.Clear
  id: Clear
  parent: MacacaGames.EffectSystem.EffectManager.EffectList
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: EffectManager.EffectList.Clear()
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.Clear()
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: Clear
    path: ../Runtime/EffectManager.cs
    startLine: 149
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: MacacaGames.EffectSystem.EffectManager.EffectList.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.Contains(MacacaGames.EffectSystem.EffectBase)
  commentId: M:MacacaGames.EffectSystem.EffectManager.EffectList.Contains(MacacaGames.EffectSystem.EffectBase)
  id: Contains(MacacaGames.EffectSystem.EffectBase)
  parent: MacacaGames.EffectSystem.EffectManager.EffectList
  langs:
  - csharp
  - vb
  name: Contains(EffectBase)
  nameWithType: EffectManager.EffectList.Contains(EffectBase)
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.Contains(MacacaGames.EffectSystem.EffectBase)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: Contains
    path: ../Runtime/EffectManager.cs
    startLine: 154
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public bool Contains(EffectBase item)
    parameters:
    - id: item
      type: MacacaGames.EffectSystem.EffectBase
    return:
      type: System.Boolean
    content.vb: Public Function Contains(item As EffectBase) As Boolean
  overload: MacacaGames.EffectSystem.EffectManager.EffectList.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.CopyTo(MacacaGames.EffectSystem.EffectBase[],System.Int32)
  commentId: M:MacacaGames.EffectSystem.EffectManager.EffectList.CopyTo(MacacaGames.EffectSystem.EffectBase[],System.Int32)
  id: CopyTo(MacacaGames.EffectSystem.EffectBase[],System.Int32)
  parent: MacacaGames.EffectSystem.EffectManager.EffectList
  langs:
  - csharp
  - vb
  name: CopyTo(EffectBase[], Int32)
  nameWithType: EffectManager.EffectList.CopyTo(EffectBase[], Int32)
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.CopyTo(MacacaGames.EffectSystem.EffectBase[], System.Int32)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: CopyTo
    path: ../Runtime/EffectManager.cs
    startLine: 159
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public void CopyTo(EffectBase[] array, int arrayIndex)
    parameters:
    - id: array
      type: MacacaGames.EffectSystem.EffectBase[]
    - id: arrayIndex
      type: System.Int32
    content.vb: Public Sub CopyTo(array As EffectBase(), arrayIndex As Integer)
  overload: MacacaGames.EffectSystem.EffectManager.EffectList.CopyTo*
  nameWithType.vb: EffectManager.EffectList.CopyTo(EffectBase(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MacacaGames.EffectSystem.EffectManager.EffectList.CopyTo(MacacaGames.EffectSystem.EffectBase(), System.Int32)
  name.vb: CopyTo(EffectBase(), Int32)
references:
- uid: MacacaGames.EffectSystem
  commentId: N:MacacaGames.EffectSystem
  name: MacacaGames.EffectSystem
  nameWithType: MacacaGames.EffectSystem
  fullName: MacacaGames.EffectSystem
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.Count*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.EffectList.Count
  name: Count
  nameWithType: EffectManager.EffectList.Count
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.Count
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.sumLimitMax*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.EffectList.sumLimitMax
  name: sumLimitMax
  nameWithType: EffectManager.EffectList.sumLimitMax
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.sumLimitMax
- uid: System.Single
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.sumLimitMin*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.EffectList.sumLimitMin
  name: sumLimitMin
  nameWithType: EffectManager.EffectList.sumLimitMin
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.sumLimitMin
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.Add*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.EffectList.Add
  name: Add
  nameWithType: EffectManager.EffectList.Add
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.Add
- uid: MacacaGames.EffectSystem.EffectBase
  commentId: T:MacacaGames.EffectSystem.EffectBase
  parent: MacacaGames.EffectSystem
  name: EffectBase
  nameWithType: EffectBase
  fullName: MacacaGames.EffectSystem.EffectBase
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.Remove*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.EffectList.Remove
  name: Remove
  nameWithType: EffectManager.EffectList.Remove
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.Remove
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.#ctor*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.EffectList.#ctor
  name: EffectList
  nameWithType: EffectManager.EffectList.EffectList
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.EffectList
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.SetDirty*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.EffectList.SetDirty
  name: SetDirty
  nameWithType: EffectManager.EffectList.SetDirty
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.SetDirty
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.GetSum*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.EffectList.GetSum
  name: GetSum
  nameWithType: EffectManager.EffectList.GetSum
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.GetSum
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.isSumOutOfLimit*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.EffectList.isSumOutOfLimit
  name: isSumOutOfLimit
  nameWithType: EffectManager.EffectList.isSumOutOfLimit
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.isSumOutOfLimit
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.IsReadOnly*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.EffectList.IsReadOnly
  name: IsReadOnly
  nameWithType: EffectManager.EffectList.IsReadOnly
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.IsReadOnly
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.GetEnumerator*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.EffectList.GetEnumerator
  name: GetEnumerator
  nameWithType: EffectManager.EffectList.GetEnumerator
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.GetEnumerator
- uid: IEnumerator{MacacaGames.EffectSystem.EffectBase}
  commentId: '!:IEnumerator{MacacaGames.EffectSystem.EffectBase}'
  definition: IEnumerator`1
  name: IEnumerator<EffectBase>
  nameWithType: IEnumerator<EffectBase>
  fullName: IEnumerator<MacacaGames.EffectSystem.EffectBase>
  nameWithType.vb: IEnumerator(Of EffectBase)
  fullName.vb: IEnumerator(Of MacacaGames.EffectSystem.EffectBase)
  name.vb: IEnumerator(Of EffectBase)
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MacacaGames.EffectSystem.EffectBase
    name: EffectBase
    nameWithType: EffectBase
    fullName: MacacaGames.EffectSystem.EffectBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MacacaGames.EffectSystem.EffectBase
    name: EffectBase
    nameWithType: EffectBase
    fullName: MacacaGames.EffectSystem.EffectBase
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerator`1
  commentId: '!:IEnumerator`1'
  isExternal: true
  name: IEnumerator<>
  nameWithType: IEnumerator<>
  fullName: IEnumerator<>
  nameWithType.vb: IEnumerator(Of )
  fullName.vb: IEnumerator(Of )
  name.vb: IEnumerator(Of )
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.Clear*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.EffectList.Clear
  name: Clear
  nameWithType: EffectManager.EffectList.Clear
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.Clear
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.Contains*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.EffectList.Contains
  name: Contains
  nameWithType: EffectManager.EffectList.Contains
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.Contains
- uid: MacacaGames.EffectSystem.EffectManager.EffectList.CopyTo*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.EffectList.CopyTo
  name: CopyTo
  nameWithType: EffectManager.EffectList.CopyTo
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList.CopyTo
- uid: MacacaGames.EffectSystem.EffectBase[]
  isExternal: true
  name: EffectBase[]
  nameWithType: EffectBase[]
  fullName: MacacaGames.EffectSystem.EffectBase[]
  nameWithType.vb: EffectBase()
  fullName.vb: MacacaGames.EffectSystem.EffectBase()
  name.vb: EffectBase()
  spec.csharp:
  - uid: MacacaGames.EffectSystem.EffectBase
    name: EffectBase
    nameWithType: EffectBase
    fullName: MacacaGames.EffectSystem.EffectBase
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: MacacaGames.EffectSystem.EffectBase
    name: EffectBase
    nameWithType: EffectBase
    fullName: MacacaGames.EffectSystem.EffectBase
  - name: ()
    nameWithType: ()
    fullName: ()
