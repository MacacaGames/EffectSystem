### YamlMime:ManagedReference
items:
- uid: MacacaGames.EffectSystem.EffectManager
  commentId: T:MacacaGames.EffectSystem.EffectManager
  id: EffectManager
  parent: MacacaGames.EffectSystem
  children:
  - MacacaGames.EffectSystem.EffectManager.AddEffect(MacacaGames.EffectSystem.IEffectableObject,MacacaGames.EffectSystem.Model.EffectInfo,System.String[])
  - MacacaGames.EffectSystem.EffectManager.AddEffects(MacacaGames.EffectSystem.IEffectableObject,IEnumerable{MacacaGames.EffectSystem.Model.EffectInfo},System.String[])
  - MacacaGames.EffectSystem.EffectManager.AddRequestedEffect(MacacaGames.EffectSystem.IEffectableObject,MacacaGames.EffectSystem.Model.EffectInfo,System.String[])
  - MacacaGames.EffectSystem.EffectManager.AddRequestedEffects(MacacaGames.EffectSystem.IEffectableObject,IEnumerable{MacacaGames.EffectSystem.Model.EffectInfo},System.String[])
  - MacacaGames.EffectSystem.EffectManager.calculator
  - MacacaGames.EffectSystem.EffectManager.CleanEffectableObject(MacacaGames.EffectSystem.IEffectableObject)
  - MacacaGames.EffectSystem.EffectManager.CreateEffect(MacacaGames.EffectSystem.Model.EffectInfo)
  - MacacaGames.EffectSystem.EffectManager.EffectConditionTriggerQuery
  - MacacaGames.EffectSystem.EffectManager.EffectTriggerCondition(MacacaGames.EffectSystem.IEffectableObject,System.String,MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo)
  - MacacaGames.EffectSystem.EffectManager.EffectTypeQuery
  - MacacaGames.EffectSystem.EffectManager.effectViewPool
  - MacacaGames.EffectSystem.EffectManager.GetColorNumberDescription(System.String,Color)
  - MacacaGames.EffectSystem.EffectManager.GetColorNumberDescription(System.String,System.String)
  - MacacaGames.EffectSystem.EffectManager.GetCustomEffectsDescription(System.String,IEnumerable{MacacaGames.EffectSystem.Model.EffectInfo})
  - MacacaGames.EffectSystem.EffectManager.GetDefaultEffectDescription(MacacaGames.EffectSystem.Model.EffectInfo)
  - MacacaGames.EffectSystem.EffectManager.GetDefaultEffectsDescription(IEnumerable{MacacaGames.EffectSystem.Model.EffectInfo})
  - MacacaGames.EffectSystem.EffectManager.GetDefaultEffectsDescriptions(IEnumerable{MacacaGames.EffectSystem.Model.EffectInfo})
  - MacacaGames.EffectSystem.EffectManager.GetEffectDescriptionStr
  - MacacaGames.EffectSystem.EffectManager.GetEffectListByType(MacacaGames.EffectSystem.IEffectableObject,System.String)
  - MacacaGames.EffectSystem.EffectManager.GetEffectsByTag(MacacaGames.EffectSystem.IEffectableObject,System.String)
  - MacacaGames.EffectSystem.EffectManager.GetEffectsByType(MacacaGames.EffectSystem.IEffectableObject,System.String,System.Boolean)
  - MacacaGames.EffectSystem.EffectManager.GetEffectsSum(MacacaGames.EffectSystem.IEffectableObject,System.String[])
  - MacacaGames.EffectSystem.EffectManager.GetEffectSum(MacacaGames.EffectSystem.IEffectableObject,System.String)
  - MacacaGames.EffectSystem.EffectManager.Init
  - MacacaGames.EffectSystem.EffectManager.QueryEffectTypeWithDefault(System.String)
  - MacacaGames.EffectSystem.EffectManager.RecoveryEffectBase(MacacaGames.EffectSystem.EffectBase,System.String)
  - MacacaGames.EffectSystem.EffectManager.RecoveryEffectView(MacacaGames.EffectSystem.EffectViewBase)
  - MacacaGames.EffectSystem.EffectManager.RegistEffectTriggerCondition(MacacaGames.EffectSystem.EffectBase)
  - MacacaGames.EffectSystem.EffectManager.RemoveEffect(MacacaGames.EffectSystem.IEffectableObject,MacacaGames.EffectSystem.EffectBase)
  - MacacaGames.EffectSystem.EffectManager.RemoveEffectByTag(MacacaGames.EffectSystem.IEffectableObject,System.String)
  - MacacaGames.EffectSystem.EffectManager.RemoveEffectsByType(MacacaGames.EffectSystem.IEffectableObject,System.String)
  - MacacaGames.EffectSystem.EffectManager.RequestEffect(MacacaGames.EffectSystem.Model.EffectInfo)
  - MacacaGames.EffectSystem.EffectManager.RequestEffectView(MacacaGames.EffectSystem.Model.EffectInfo,MacacaGames.EffectSystem.Model.EffectViewInfo,MacacaGames.EffectSystem.IEffectableObject)
  - MacacaGames.EffectSystem.EffectManager.ResetEffectableObjectQuery
  - MacacaGames.EffectSystem.EffectManager.ResetEffectActiveTimeAndCooldownTime(MacacaGames.EffectSystem.IEffectableObject)
  - MacacaGames.EffectSystem.EffectManager.UnregistEffectTriggerCondition(MacacaGames.EffectSystem.EffectBase)
  - MacacaGames.EffectSystem.EffectManager.UpdateEffectMaintainAction(MacacaGames.EffectSystem.IEffectableObject)
  - MacacaGames.EffectSystem.EffectManager.UpdateEffectMaintainRound(MacacaGames.EffectSystem.IEffectableObject)
  langs:
  - csharp
  - vb
  name: EffectManager
  nameWithType: EffectManager
  fullName: MacacaGames.EffectSystem.EffectManager
  type: Class
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: EffectManager
    path: ../Runtime/EffectManager.cs
    startLine: 16
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: 'public class EffectManager : MonoBehaviourLifeCycle, IApplicationLifeCycle'
    content.vb: >-
      Public Class EffectManager
          Inherits MonoBehaviourLifeCycle
          Implements IApplicationLifeCycle
  inheritance:
  - System.Object
  - MacacaGames.GameSystem.MonoBehaviourLifeCycle
  implements:
  - MacacaGames.GameSystem.IApplicationLifeCycle
  inheritedMembers:
  - MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnApplicationUpdate
  - MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnEnterLobby
  - MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnGamePlayUpdate
  - MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnUnPauseGamePlayUpdate
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: MacacaGames.EffectSystem.EffectManager.EffectTypeQuery
  commentId: F:MacacaGames.EffectSystem.EffectManager.EffectTypeQuery
  id: EffectTypeQuery
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: EffectTypeQuery
  nameWithType: EffectManager.EffectTypeQuery
  fullName: MacacaGames.EffectSystem.EffectManager.EffectTypeQuery
  type: Field
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: EffectTypeQuery
    path: ../Runtime/EffectManager.cs
    startLine: 24
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  summary: "\n只放預設\n"
  example: []
  syntax:
    content: public static Dictionary<string, Type> EffectTypeQuery
    return:
      type: Dictionary{System.String,Type}
      description: ''
    content.vb: Public Shared EffectTypeQuery As Dictionary(Of String, Type)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MacacaGames.EffectSystem.EffectManager.QueryEffectTypeWithDefault(System.String)
  commentId: M:MacacaGames.EffectSystem.EffectManager.QueryEffectTypeWithDefault(System.String)
  id: QueryEffectTypeWithDefault(System.String)
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: QueryEffectTypeWithDefault(String)
  nameWithType: EffectManager.QueryEffectTypeWithDefault(String)
  fullName: MacacaGames.EffectSystem.EffectManager.QueryEffectTypeWithDefault(System.String)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: QueryEffectTypeWithDefault
    path: ../Runtime/EffectManager.cs
    startLine: 29
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public static Type QueryEffectTypeWithDefault(string effectType)
    parameters:
    - id: effectType
      type: System.String
    return:
      type: Type
    content.vb: Public Shared Function QueryEffectTypeWithDefault(effectType As String) As Type
  overload: MacacaGames.EffectSystem.EffectManager.QueryEffectTypeWithDefault*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MacacaGames.EffectSystem.EffectManager.GetEffectDescriptionStr
  commentId: F:MacacaGames.EffectSystem.EffectManager.GetEffectDescriptionStr
  id: GetEffectDescriptionStr
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: GetEffectDescriptionStr
  nameWithType: EffectManager.GetEffectDescriptionStr
  fullName: MacacaGames.EffectSystem.EffectManager.GetEffectDescriptionStr
  type: Field
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: GetEffectDescriptionStr
    path: ../Runtime/EffectManager.cs
    startLine: 41
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public static Func<string, string> GetEffectDescriptionStr
    return:
      type: Func{System.String,System.String}
    content.vb: Public Shared GetEffectDescriptionStr As Func(Of String, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MacacaGames.EffectSystem.EffectManager.EffectConditionTriggerQuery
  commentId: F:MacacaGames.EffectSystem.EffectManager.EffectConditionTriggerQuery
  id: EffectConditionTriggerQuery
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: EffectConditionTriggerQuery
  nameWithType: EffectManager.EffectConditionTriggerQuery
  fullName: MacacaGames.EffectSystem.EffectManager.EffectConditionTriggerQuery
  type: Field
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: EffectConditionTriggerQuery
    path: ../Runtime/EffectManager.cs
    startLine: 45
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public Dictionary<string, Func<Action<EffectManager.EffectTriggerConditionInfo>, IEnumerator>> EffectConditionTriggerQuery
    return:
      type: Dictionary{System.String,Func{Action{MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo},IEnumerator}}
    content.vb: Public EffectConditionTriggerQuery As Dictionary(Of String, Func(Of Action(Of EffectManager.EffectTriggerConditionInfo), IEnumerator))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.calculator
  commentId: F:MacacaGames.EffectSystem.EffectManager.calculator
  id: calculator
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: calculator
  nameWithType: EffectManager.calculator
  fullName: MacacaGames.EffectSystem.EffectManager.calculator
  type: Field
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: calculator
    path: ../Runtime/EffectManager.cs
    startLine: 63
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public static EffectCalculator calculator
    return:
      type: MacacaGames.EffectSystem.EffectCalculator
    content.vb: Public Shared calculator As EffectCalculator
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MacacaGames.EffectSystem.EffectManager.Init
  commentId: M:MacacaGames.EffectSystem.EffectManager.Init
  id: Init
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: Init()
  nameWithType: EffectManager.Init()
  fullName: MacacaGames.EffectSystem.EffectManager.Init()
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: Init
    path: ../Runtime/EffectManager.cs
    startLine: 172
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public override Task Init()
    return:
      type: Task
    content.vb: Public Overrides Function Init As Task
  overridden: MacacaGames.GameSystem.MonoBehaviourLifeCycle.Init
  overload: MacacaGames.EffectSystem.EffectManager.Init*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: MacacaGames.EffectSystem.EffectManager.CleanEffectableObject(MacacaGames.EffectSystem.IEffectableObject)
  commentId: M:MacacaGames.EffectSystem.EffectManager.CleanEffectableObject(MacacaGames.EffectSystem.IEffectableObject)
  id: CleanEffectableObject(MacacaGames.EffectSystem.IEffectableObject)
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: CleanEffectableObject(IEffectableObject)
  nameWithType: EffectManager.CleanEffectableObject(IEffectableObject)
  fullName: MacacaGames.EffectSystem.EffectManager.CleanEffectableObject(MacacaGames.EffectSystem.IEffectableObject)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: CleanEffectableObject
    path: ../Runtime/EffectManager.cs
    startLine: 192
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  summary: 移除指定EffectableObject，結束他擁有的所有Effect、解除所有註冊的Condition。
  example: []
  syntax:
    content: public void CleanEffectableObject(IEffectableObject owner)
    parameters:
    - id: owner
      type: MacacaGames.EffectSystem.IEffectableObject
    content.vb: Public Sub CleanEffectableObject(owner As IEffectableObject)
  overload: MacacaGames.EffectSystem.EffectManager.CleanEffectableObject*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.UpdateEffectMaintainAction(MacacaGames.EffectSystem.IEffectableObject)
  commentId: M:MacacaGames.EffectSystem.EffectManager.UpdateEffectMaintainAction(MacacaGames.EffectSystem.IEffectableObject)
  id: UpdateEffectMaintainAction(MacacaGames.EffectSystem.IEffectableObject)
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: UpdateEffectMaintainAction(IEffectableObject)
  nameWithType: EffectManager.UpdateEffectMaintainAction(IEffectableObject)
  fullName: MacacaGames.EffectSystem.EffectManager.UpdateEffectMaintainAction(MacacaGames.EffectSystem.IEffectableObject)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: UpdateEffectMaintainAction
    path: ../Runtime/EffectManager.cs
    startLine: 205
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public void UpdateEffectMaintainAction(IEffectableObject owner)
    parameters:
    - id: owner
      type: MacacaGames.EffectSystem.IEffectableObject
    content.vb: Public Sub UpdateEffectMaintainAction(owner As IEffectableObject)
  overload: MacacaGames.EffectSystem.EffectManager.UpdateEffectMaintainAction*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.UpdateEffectMaintainRound(MacacaGames.EffectSystem.IEffectableObject)
  commentId: M:MacacaGames.EffectSystem.EffectManager.UpdateEffectMaintainRound(MacacaGames.EffectSystem.IEffectableObject)
  id: UpdateEffectMaintainRound(MacacaGames.EffectSystem.IEffectableObject)
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: UpdateEffectMaintainRound(IEffectableObject)
  nameWithType: EffectManager.UpdateEffectMaintainRound(IEffectableObject)
  fullName: MacacaGames.EffectSystem.EffectManager.UpdateEffectMaintainRound(MacacaGames.EffectSystem.IEffectableObject)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: UpdateEffectMaintainRound
    path: ../Runtime/EffectManager.cs
    startLine: 220
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public void UpdateEffectMaintainRound(IEffectableObject owner)
    parameters:
    - id: owner
      type: MacacaGames.EffectSystem.IEffectableObject
    content.vb: Public Sub UpdateEffectMaintainRound(owner As IEffectableObject)
  overload: MacacaGames.EffectSystem.EffectManager.UpdateEffectMaintainRound*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.ResetEffectActiveTimeAndCooldownTime(MacacaGames.EffectSystem.IEffectableObject)
  commentId: M:MacacaGames.EffectSystem.EffectManager.ResetEffectActiveTimeAndCooldownTime(MacacaGames.EffectSystem.IEffectableObject)
  id: ResetEffectActiveTimeAndCooldownTime(MacacaGames.EffectSystem.IEffectableObject)
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: ResetEffectActiveTimeAndCooldownTime(IEffectableObject)
  nameWithType: EffectManager.ResetEffectActiveTimeAndCooldownTime(IEffectableObject)
  fullName: MacacaGames.EffectSystem.EffectManager.ResetEffectActiveTimeAndCooldownTime(MacacaGames.EffectSystem.IEffectableObject)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: ResetEffectActiveTimeAndCooldownTime
    path: ../Runtime/EffectManager.cs
    startLine: 236
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public void ResetEffectActiveTimeAndCooldownTime(IEffectableObject owner)
    parameters:
    - id: owner
      type: MacacaGames.EffectSystem.IEffectableObject
    content.vb: Public Sub ResetEffectActiveTimeAndCooldownTime(owner As IEffectableObject)
  overload: MacacaGames.EffectSystem.EffectManager.ResetEffectActiveTimeAndCooldownTime*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.effectViewPool
  commentId: F:MacacaGames.EffectSystem.EffectManager.effectViewPool
  id: effectViewPool
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: effectViewPool
  nameWithType: EffectManager.effectViewPool
  fullName: MacacaGames.EffectSystem.EffectManager.effectViewPool
  type: Field
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: effectViewPool
    path: ../Runtime/EffectManager.cs
    startLine: 250
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public Dictionary<GameObject, Queue<EffectViewBase>> effectViewPool
    return:
      type: Dictionary{GameObject,Queue{MacacaGames.EffectSystem.EffectViewBase}}
    content.vb: Public effectViewPool As Dictionary(Of GameObject, Queue(Of EffectViewBase))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.RequestEffectView(MacacaGames.EffectSystem.Model.EffectInfo,MacacaGames.EffectSystem.Model.EffectViewInfo,MacacaGames.EffectSystem.IEffectableObject)
  commentId: M:MacacaGames.EffectSystem.EffectManager.RequestEffectView(MacacaGames.EffectSystem.Model.EffectInfo,MacacaGames.EffectSystem.Model.EffectViewInfo,MacacaGames.EffectSystem.IEffectableObject)
  id: RequestEffectView(MacacaGames.EffectSystem.Model.EffectInfo,MacacaGames.EffectSystem.Model.EffectViewInfo,MacacaGames.EffectSystem.IEffectableObject)
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: RequestEffectView(EffectInfo, EffectViewInfo, IEffectableObject)
  nameWithType: EffectManager.RequestEffectView(EffectInfo, EffectViewInfo, IEffectableObject)
  fullName: MacacaGames.EffectSystem.EffectManager.RequestEffectView(MacacaGames.EffectSystem.Model.EffectInfo, MacacaGames.EffectSystem.Model.EffectViewInfo, MacacaGames.EffectSystem.IEffectableObject)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: RequestEffectView
    path: ../Runtime/EffectManager.cs
    startLine: 252
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public EffectViewBase RequestEffectView(EffectInfo info, EffectViewInfo viewInfo, IEffectableObject owner)
    parameters:
    - id: info
      type: MacacaGames.EffectSystem.Model.EffectInfo
    - id: viewInfo
      type: MacacaGames.EffectSystem.Model.EffectViewInfo
    - id: owner
      type: MacacaGames.EffectSystem.IEffectableObject
    return:
      type: MacacaGames.EffectSystem.EffectViewBase
    content.vb: Public Function RequestEffectView(info As EffectInfo, viewInfo As EffectViewInfo, owner As IEffectableObject) As EffectViewBase
  overload: MacacaGames.EffectSystem.EffectManager.RequestEffectView*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.RecoveryEffectView(MacacaGames.EffectSystem.EffectViewBase)
  commentId: M:MacacaGames.EffectSystem.EffectManager.RecoveryEffectView(MacacaGames.EffectSystem.EffectViewBase)
  id: RecoveryEffectView(MacacaGames.EffectSystem.EffectViewBase)
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: RecoveryEffectView(EffectViewBase)
  nameWithType: EffectManager.RecoveryEffectView(EffectViewBase)
  fullName: MacacaGames.EffectSystem.EffectManager.RecoveryEffectView(MacacaGames.EffectSystem.EffectViewBase)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: RecoveryEffectView
    path: ../Runtime/EffectManager.cs
    startLine: 295
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public void RecoveryEffectView(EffectViewBase effectView)
    parameters:
    - id: effectView
      type: MacacaGames.EffectSystem.EffectViewBase
    content.vb: Public Sub RecoveryEffectView(effectView As EffectViewBase)
  overload: MacacaGames.EffectSystem.EffectManager.RecoveryEffectView*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.ResetEffectableObjectQuery
  commentId: M:MacacaGames.EffectSystem.EffectManager.ResetEffectableObjectQuery
  id: ResetEffectableObjectQuery
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: ResetEffectableObjectQuery()
  nameWithType: EffectManager.ResetEffectableObjectQuery()
  fullName: MacacaGames.EffectSystem.EffectManager.ResetEffectableObjectQuery()
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: ResetEffectableObjectQuery
    path: ../Runtime/EffectManager.cs
    startLine: 305
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public void ResetEffectableObjectQuery()
    content.vb: Public Sub ResetEffectableObjectQuery
  overload: MacacaGames.EffectSystem.EffectManager.ResetEffectableObjectQuery*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.EffectTriggerCondition(MacacaGames.EffectSystem.IEffectableObject,System.String,MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo)
  commentId: M:MacacaGames.EffectSystem.EffectManager.EffectTriggerCondition(MacacaGames.EffectSystem.IEffectableObject,System.String,MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo)
  id: EffectTriggerCondition(MacacaGames.EffectSystem.IEffectableObject,System.String,MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo)
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: EffectTriggerCondition(IEffectableObject, String, EffectManager.EffectTriggerConditionInfo)
  nameWithType: EffectManager.EffectTriggerCondition(IEffectableObject, String, EffectManager.EffectTriggerConditionInfo)
  fullName: MacacaGames.EffectSystem.EffectManager.EffectTriggerCondition(MacacaGames.EffectSystem.IEffectableObject, System.String, MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: EffectTriggerCondition
    path: ../Runtime/EffectManager.cs
    startLine: 311
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  summary: 觸發指定類別的條件Trigger。
  example: []
  syntax:
    content: public void EffectTriggerCondition(IEffectableObject owner, string condition, EffectManager.EffectTriggerConditionInfo info)
    parameters:
    - id: owner
      type: MacacaGames.EffectSystem.IEffectableObject
    - id: condition
      type: System.String
    - id: info
      type: MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo
    content.vb: Public Sub EffectTriggerCondition(owner As IEffectableObject, condition As String, info As EffectManager.EffectTriggerConditionInfo)
  overload: MacacaGames.EffectSystem.EffectManager.EffectTriggerCondition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.RegistEffectTriggerCondition(MacacaGames.EffectSystem.EffectBase)
  commentId: M:MacacaGames.EffectSystem.EffectManager.RegistEffectTriggerCondition(MacacaGames.EffectSystem.EffectBase)
  id: RegistEffectTriggerCondition(MacacaGames.EffectSystem.EffectBase)
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: RegistEffectTriggerCondition(EffectBase)
  nameWithType: EffectManager.RegistEffectTriggerCondition(EffectBase)
  fullName: MacacaGames.EffectSystem.EffectManager.RegistEffectTriggerCondition(MacacaGames.EffectSystem.EffectBase)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: RegistEffectTriggerCondition
    path: ../Runtime/EffectManager.cs
    startLine: 326
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public void RegistEffectTriggerCondition(EffectBase effect)
    parameters:
    - id: effect
      type: MacacaGames.EffectSystem.EffectBase
    content.vb: Public Sub RegistEffectTriggerCondition(effect As EffectBase)
  overload: MacacaGames.EffectSystem.EffectManager.RegistEffectTriggerCondition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.UnregistEffectTriggerCondition(MacacaGames.EffectSystem.EffectBase)
  commentId: M:MacacaGames.EffectSystem.EffectManager.UnregistEffectTriggerCondition(MacacaGames.EffectSystem.EffectBase)
  id: UnregistEffectTriggerCondition(MacacaGames.EffectSystem.EffectBase)
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: UnregistEffectTriggerCondition(EffectBase)
  nameWithType: EffectManager.UnregistEffectTriggerCondition(EffectBase)
  fullName: MacacaGames.EffectSystem.EffectManager.UnregistEffectTriggerCondition(MacacaGames.EffectSystem.EffectBase)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: UnregistEffectTriggerCondition
    path: ../Runtime/EffectManager.cs
    startLine: 353
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public void UnregistEffectTriggerCondition(EffectBase effect)
    parameters:
    - id: effect
      type: MacacaGames.EffectSystem.EffectBase
    content.vb: Public Sub UnregistEffectTriggerCondition(effect As EffectBase)
  overload: MacacaGames.EffectSystem.EffectManager.UnregistEffectTriggerCondition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.RequestEffect(MacacaGames.EffectSystem.Model.EffectInfo)
  commentId: M:MacacaGames.EffectSystem.EffectManager.RequestEffect(MacacaGames.EffectSystem.Model.EffectInfo)
  id: RequestEffect(MacacaGames.EffectSystem.Model.EffectInfo)
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: RequestEffect(EffectInfo)
  nameWithType: EffectManager.RequestEffect(EffectInfo)
  fullName: MacacaGames.EffectSystem.EffectManager.RequestEffect(MacacaGames.EffectSystem.Model.EffectInfo)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: RequestEffect
    path: ../Runtime/EffectManager.cs
    startLine: 435
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public static EffectBase RequestEffect(EffectInfo info)
    parameters:
    - id: info
      type: MacacaGames.EffectSystem.Model.EffectInfo
    return:
      type: MacacaGames.EffectSystem.EffectBase
    content.vb: Public Shared Function RequestEffect(info As EffectInfo) As EffectBase
  overload: MacacaGames.EffectSystem.EffectManager.RequestEffect*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MacacaGames.EffectSystem.EffectManager.RecoveryEffectBase(MacacaGames.EffectSystem.EffectBase,System.String)
  commentId: M:MacacaGames.EffectSystem.EffectManager.RecoveryEffectBase(MacacaGames.EffectSystem.EffectBase,System.String)
  id: RecoveryEffectBase(MacacaGames.EffectSystem.EffectBase,System.String)
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: RecoveryEffectBase(EffectBase, String)
  nameWithType: EffectManager.RecoveryEffectBase(EffectBase, String)
  fullName: MacacaGames.EffectSystem.EffectManager.RecoveryEffectBase(MacacaGames.EffectSystem.EffectBase, System.String)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: RecoveryEffectBase
    path: ../Runtime/EffectManager.cs
    startLine: 449
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public static void RecoveryEffectBase(EffectBase effect, string type)
    parameters:
    - id: effect
      type: MacacaGames.EffectSystem.EffectBase
    - id: type
      type: System.String
    content.vb: Public Shared Sub RecoveryEffectBase(effect As EffectBase, type As String)
  overload: MacacaGames.EffectSystem.EffectManager.RecoveryEffectBase*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MacacaGames.EffectSystem.EffectManager.CreateEffect(MacacaGames.EffectSystem.Model.EffectInfo)
  commentId: M:MacacaGames.EffectSystem.EffectManager.CreateEffect(MacacaGames.EffectSystem.Model.EffectInfo)
  id: CreateEffect(MacacaGames.EffectSystem.Model.EffectInfo)
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: CreateEffect(EffectInfo)
  nameWithType: EffectManager.CreateEffect(EffectInfo)
  fullName: MacacaGames.EffectSystem.EffectManager.CreateEffect(MacacaGames.EffectSystem.Model.EffectInfo)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: CreateEffect
    path: ../Runtime/EffectManager.cs
    startLine: 487
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  summary: 創造一個Effect實體，且有指定的Info。
  example: []
  syntax:
    content: public static EffectBase CreateEffect(EffectInfo info)
    parameters:
    - id: info
      type: MacacaGames.EffectSystem.Model.EffectInfo
    return:
      type: MacacaGames.EffectSystem.EffectBase
    content.vb: Public Shared Function CreateEffect(info As EffectInfo) As EffectBase
  overload: MacacaGames.EffectSystem.EffectManager.CreateEffect*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MacacaGames.EffectSystem.EffectManager.GetDefaultEffectsDescription(IEnumerable{MacacaGames.EffectSystem.Model.EffectInfo})
  commentId: M:MacacaGames.EffectSystem.EffectManager.GetDefaultEffectsDescription(IEnumerable{MacacaGames.EffectSystem.Model.EffectInfo})
  id: GetDefaultEffectsDescription(IEnumerable{MacacaGames.EffectSystem.Model.EffectInfo})
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: GetDefaultEffectsDescription(IEnumerable<EffectInfo>)
  nameWithType: EffectManager.GetDefaultEffectsDescription(IEnumerable<EffectInfo>)
  fullName: MacacaGames.EffectSystem.EffectManager.GetDefaultEffectsDescription(IEnumerable<MacacaGames.EffectSystem.Model.EffectInfo>)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: GetDefaultEffectsDescription
    path: ../Runtime/EffectManager.cs
    startLine: 508
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public static string GetDefaultEffectsDescription(IEnumerable<EffectInfo> infos)
    parameters:
    - id: infos
      type: IEnumerable{MacacaGames.EffectSystem.Model.EffectInfo}
    return:
      type: System.String
    content.vb: Public Shared Function GetDefaultEffectsDescription(infos As IEnumerable(Of EffectInfo)) As String
  overload: MacacaGames.EffectSystem.EffectManager.GetDefaultEffectsDescription*
  nameWithType.vb: EffectManager.GetDefaultEffectsDescription(IEnumerable(Of EffectInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: MacacaGames.EffectSystem.EffectManager.GetDefaultEffectsDescription(IEnumerable(Of MacacaGames.EffectSystem.Model.EffectInfo))
  name.vb: GetDefaultEffectsDescription(IEnumerable(Of EffectInfo))
- uid: MacacaGames.EffectSystem.EffectManager.GetDefaultEffectsDescriptions(IEnumerable{MacacaGames.EffectSystem.Model.EffectInfo})
  commentId: M:MacacaGames.EffectSystem.EffectManager.GetDefaultEffectsDescriptions(IEnumerable{MacacaGames.EffectSystem.Model.EffectInfo})
  id: GetDefaultEffectsDescriptions(IEnumerable{MacacaGames.EffectSystem.Model.EffectInfo})
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: GetDefaultEffectsDescriptions(IEnumerable<EffectInfo>)
  nameWithType: EffectManager.GetDefaultEffectsDescriptions(IEnumerable<EffectInfo>)
  fullName: MacacaGames.EffectSystem.EffectManager.GetDefaultEffectsDescriptions(IEnumerable<MacacaGames.EffectSystem.Model.EffectInfo>)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: GetDefaultEffectsDescriptions
    path: ../Runtime/EffectManager.cs
    startLine: 513
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public static IEnumerable<string> GetDefaultEffectsDescriptions(IEnumerable<EffectInfo> infos)
    parameters:
    - id: infos
      type: IEnumerable{MacacaGames.EffectSystem.Model.EffectInfo}
    return:
      type: IEnumerable{System.String}
    content.vb: Public Shared Function GetDefaultEffectsDescriptions(infos As IEnumerable(Of EffectInfo)) As IEnumerable(Of String)
  overload: MacacaGames.EffectSystem.EffectManager.GetDefaultEffectsDescriptions*
  nameWithType.vb: EffectManager.GetDefaultEffectsDescriptions(IEnumerable(Of EffectInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: MacacaGames.EffectSystem.EffectManager.GetDefaultEffectsDescriptions(IEnumerable(Of MacacaGames.EffectSystem.Model.EffectInfo))
  name.vb: GetDefaultEffectsDescriptions(IEnumerable(Of EffectInfo))
- uid: MacacaGames.EffectSystem.EffectManager.GetDefaultEffectDescription(MacacaGames.EffectSystem.Model.EffectInfo)
  commentId: M:MacacaGames.EffectSystem.EffectManager.GetDefaultEffectDescription(MacacaGames.EffectSystem.Model.EffectInfo)
  id: GetDefaultEffectDescription(MacacaGames.EffectSystem.Model.EffectInfo)
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: GetDefaultEffectDescription(EffectInfo)
  nameWithType: EffectManager.GetDefaultEffectDescription(EffectInfo)
  fullName: MacacaGames.EffectSystem.EffectManager.GetDefaultEffectDescription(MacacaGames.EffectSystem.Model.EffectInfo)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: GetDefaultEffectDescription
    path: ../Runtime/EffectManager.cs
    startLine: 523
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  summary: "\n取得指定EffectInfo的說明。\n"
  example: []
  syntax:
    content: public static string GetDefaultEffectDescription(EffectInfo info)
    parameters:
    - id: info
      type: MacacaGames.EffectSystem.Model.EffectInfo
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function GetDefaultEffectDescription(info As EffectInfo) As String
  overload: MacacaGames.EffectSystem.EffectManager.GetDefaultEffectDescription*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MacacaGames.EffectSystem.EffectManager.GetCustomEffectsDescription(System.String,IEnumerable{MacacaGames.EffectSystem.Model.EffectInfo})
  commentId: M:MacacaGames.EffectSystem.EffectManager.GetCustomEffectsDescription(System.String,IEnumerable{MacacaGames.EffectSystem.Model.EffectInfo})
  id: GetCustomEffectsDescription(System.String,IEnumerable{MacacaGames.EffectSystem.Model.EffectInfo})
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: GetCustomEffectsDescription(String, IEnumerable<EffectInfo>)
  nameWithType: EffectManager.GetCustomEffectsDescription(String, IEnumerable<EffectInfo>)
  fullName: MacacaGames.EffectSystem.EffectManager.GetCustomEffectsDescription(System.String, IEnumerable<MacacaGames.EffectSystem.Model.EffectInfo>)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: GetCustomEffectsDescription
    path: ../Runtime/EffectManager.cs
    startLine: 539
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public static string GetCustomEffectsDescription(string str, IEnumerable<EffectInfo> infos)
    parameters:
    - id: str
      type: System.String
    - id: infos
      type: IEnumerable{MacacaGames.EffectSystem.Model.EffectInfo}
    return:
      type: System.String
    content.vb: Public Shared Function GetCustomEffectsDescription(str As String, infos As IEnumerable(Of EffectInfo)) As String
  overload: MacacaGames.EffectSystem.EffectManager.GetCustomEffectsDescription*
  nameWithType.vb: EffectManager.GetCustomEffectsDescription(String, IEnumerable(Of EffectInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: MacacaGames.EffectSystem.EffectManager.GetCustomEffectsDescription(System.String, IEnumerable(Of MacacaGames.EffectSystem.Model.EffectInfo))
  name.vb: GetCustomEffectsDescription(String, IEnumerable(Of EffectInfo))
- uid: MacacaGames.EffectSystem.EffectManager.GetColorNumberDescription(System.String,System.String)
  commentId: M:MacacaGames.EffectSystem.EffectManager.GetColorNumberDescription(System.String,System.String)
  id: GetColorNumberDescription(System.String,System.String)
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: GetColorNumberDescription(String, String)
  nameWithType: EffectManager.GetColorNumberDescription(String, String)
  fullName: MacacaGames.EffectSystem.EffectManager.GetColorNumberDescription(System.String, System.String)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: GetColorNumberDescription
    path: ../Runtime/EffectManager.cs
    startLine: 761
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public static string GetColorNumberDescription(string text, string colorHex)
    parameters:
    - id: text
      type: System.String
    - id: colorHex
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetColorNumberDescription(text As String, colorHex As String) As String
  overload: MacacaGames.EffectSystem.EffectManager.GetColorNumberDescription*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MacacaGames.EffectSystem.EffectManager.GetColorNumberDescription(System.String,Color)
  commentId: M:MacacaGames.EffectSystem.EffectManager.GetColorNumberDescription(System.String,Color)
  id: GetColorNumberDescription(System.String,Color)
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: GetColorNumberDescription(String, Color)
  nameWithType: EffectManager.GetColorNumberDescription(String, Color)
  fullName: MacacaGames.EffectSystem.EffectManager.GetColorNumberDescription(System.String, Color)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: GetColorNumberDescription
    path: ../Runtime/EffectManager.cs
    startLine: 775
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public static string GetColorNumberDescription(string text, Color color)
    parameters:
    - id: text
      type: System.String
    - id: color
      type: Color
    return:
      type: System.String
    content.vb: Public Shared Function GetColorNumberDescription(text As String, color As Color) As String
  overload: MacacaGames.EffectSystem.EffectManager.GetColorNumberDescription*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MacacaGames.EffectSystem.EffectManager.GetEffectListByType(MacacaGames.EffectSystem.IEffectableObject,System.String)
  commentId: M:MacacaGames.EffectSystem.EffectManager.GetEffectListByType(MacacaGames.EffectSystem.IEffectableObject,System.String)
  id: GetEffectListByType(MacacaGames.EffectSystem.IEffectableObject,System.String)
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: GetEffectListByType(IEffectableObject, String)
  nameWithType: EffectManager.GetEffectListByType(IEffectableObject, String)
  fullName: MacacaGames.EffectSystem.EffectManager.GetEffectListByType(MacacaGames.EffectSystem.IEffectableObject, System.String)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: GetEffectListByType
    path: ../Runtime/EffectManager.cs
    startLine: 790
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  summary: 取得指定Owner的指定EffectType的EffectList。
  example: []
  syntax:
    content: public EffectManager.EffectList GetEffectListByType(IEffectableObject owner, string effectType)
    parameters:
    - id: owner
      type: MacacaGames.EffectSystem.IEffectableObject
    - id: effectType
      type: System.String
    return:
      type: MacacaGames.EffectSystem.EffectManager.EffectList
    content.vb: Public Function GetEffectListByType(owner As IEffectableObject, effectType As String) As EffectManager.EffectList
  overload: MacacaGames.EffectSystem.EffectManager.GetEffectListByType*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.GetEffectSum(MacacaGames.EffectSystem.IEffectableObject,System.String)
  commentId: M:MacacaGames.EffectSystem.EffectManager.GetEffectSum(MacacaGames.EffectSystem.IEffectableObject,System.String)
  id: GetEffectSum(MacacaGames.EffectSystem.IEffectableObject,System.String)
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: GetEffectSum(IEffectableObject, String)
  nameWithType: EffectManager.GetEffectSum(IEffectableObject, String)
  fullName: MacacaGames.EffectSystem.EffectManager.GetEffectSum(MacacaGames.EffectSystem.IEffectableObject, System.String)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: GetEffectSum
    path: ../Runtime/EffectManager.cs
    startLine: 808
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  summary: 取得指定EffectType的Value總和。
  example: []
  syntax:
    content: public float GetEffectSum(IEffectableObject target, string effectType)
    parameters:
    - id: target
      type: MacacaGames.EffectSystem.IEffectableObject
    - id: effectType
      type: System.String
    return:
      type: System.Single
    content.vb: Public Function GetEffectSum(target As IEffectableObject, effectType As String) As Single
  overload: MacacaGames.EffectSystem.EffectManager.GetEffectSum*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.GetEffectsSum(MacacaGames.EffectSystem.IEffectableObject,System.String[])
  commentId: M:MacacaGames.EffectSystem.EffectManager.GetEffectsSum(MacacaGames.EffectSystem.IEffectableObject,System.String[])
  id: GetEffectsSum(MacacaGames.EffectSystem.IEffectableObject,System.String[])
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: GetEffectsSum(IEffectableObject, String[])
  nameWithType: EffectManager.GetEffectsSum(IEffectableObject, String[])
  fullName: MacacaGames.EffectSystem.EffectManager.GetEffectsSum(MacacaGames.EffectSystem.IEffectableObject, System.String[])
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: GetEffectsSum
    path: ../Runtime/EffectManager.cs
    startLine: 818
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  summary: 取得複數指定EffectType的Value總和的總和。
  example: []
  syntax:
    content: public float GetEffectsSum(IEffectableObject target, params string[] effectType)
    parameters:
    - id: target
      type: MacacaGames.EffectSystem.IEffectableObject
    - id: effectType
      type: System.String[]
    return:
      type: System.Single
    content.vb: Public Function GetEffectsSum(target As IEffectableObject, ParamArray effectType As String()) As Single
  overload: MacacaGames.EffectSystem.EffectManager.GetEffectsSum*
  nameWithType.vb: EffectManager.GetEffectsSum(IEffectableObject, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MacacaGames.EffectSystem.EffectManager.GetEffectsSum(MacacaGames.EffectSystem.IEffectableObject, System.String())
  name.vb: GetEffectsSum(IEffectableObject, String())
- uid: MacacaGames.EffectSystem.EffectManager.AddRequestedEffect(MacacaGames.EffectSystem.IEffectableObject,MacacaGames.EffectSystem.Model.EffectInfo,System.String[])
  commentId: M:MacacaGames.EffectSystem.EffectManager.AddRequestedEffect(MacacaGames.EffectSystem.IEffectableObject,MacacaGames.EffectSystem.Model.EffectInfo,System.String[])
  id: AddRequestedEffect(MacacaGames.EffectSystem.IEffectableObject,MacacaGames.EffectSystem.Model.EffectInfo,System.String[])
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: AddRequestedEffect(IEffectableObject, EffectInfo, String[])
  nameWithType: EffectManager.AddRequestedEffect(IEffectableObject, EffectInfo, String[])
  fullName: MacacaGames.EffectSystem.EffectManager.AddRequestedEffect(MacacaGames.EffectSystem.IEffectableObject, MacacaGames.EffectSystem.Model.EffectInfo, System.String[])
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: AddRequestedEffect
    path: ../Runtime/EffectManager.cs
    startLine: 833
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  summary: 附加指定的Effect實體，從物件池拿。
  example: []
  syntax:
    content: public void AddRequestedEffect(IEffectableObject owner, EffectInfo effectInfo, params string[] tags)
    parameters:
    - id: owner
      type: MacacaGames.EffectSystem.IEffectableObject
    - id: effectInfo
      type: MacacaGames.EffectSystem.Model.EffectInfo
    - id: tags
      type: System.String[]
    content.vb: Public Sub AddRequestedEffect(owner As IEffectableObject, effectInfo As EffectInfo, ParamArray tags As String())
  overload: MacacaGames.EffectSystem.EffectManager.AddRequestedEffect*
  nameWithType.vb: EffectManager.AddRequestedEffect(IEffectableObject, EffectInfo, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MacacaGames.EffectSystem.EffectManager.AddRequestedEffect(MacacaGames.EffectSystem.IEffectableObject, MacacaGames.EffectSystem.Model.EffectInfo, System.String())
  name.vb: AddRequestedEffect(IEffectableObject, EffectInfo, String())
- uid: MacacaGames.EffectSystem.EffectManager.AddRequestedEffects(MacacaGames.EffectSystem.IEffectableObject,IEnumerable{MacacaGames.EffectSystem.Model.EffectInfo},System.String[])
  commentId: M:MacacaGames.EffectSystem.EffectManager.AddRequestedEffects(MacacaGames.EffectSystem.IEffectableObject,IEnumerable{MacacaGames.EffectSystem.Model.EffectInfo},System.String[])
  id: AddRequestedEffects(MacacaGames.EffectSystem.IEffectableObject,IEnumerable{MacacaGames.EffectSystem.Model.EffectInfo},System.String[])
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: AddRequestedEffects(IEffectableObject, IEnumerable<EffectInfo>, String[])
  nameWithType: EffectManager.AddRequestedEffects(IEffectableObject, IEnumerable<EffectInfo>, String[])
  fullName: MacacaGames.EffectSystem.EffectManager.AddRequestedEffects(MacacaGames.EffectSystem.IEffectableObject, IEnumerable<MacacaGames.EffectSystem.Model.EffectInfo>, System.String[])
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: AddRequestedEffects
    path: ../Runtime/EffectManager.cs
    startLine: 875
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  summary: 附加複數指定的Effect實體，從物件池拿。
  example: []
  syntax:
    content: public void AddRequestedEffects(IEffectableObject owner, IEnumerable<EffectInfo> effectInfos, params string[] tags)
    parameters:
    - id: owner
      type: MacacaGames.EffectSystem.IEffectableObject
    - id: effectInfos
      type: IEnumerable{MacacaGames.EffectSystem.Model.EffectInfo}
    - id: tags
      type: System.String[]
    content.vb: Public Sub AddRequestedEffects(owner As IEffectableObject, effectInfos As IEnumerable(Of EffectInfo), ParamArray tags As String())
  overload: MacacaGames.EffectSystem.EffectManager.AddRequestedEffects*
  nameWithType.vb: EffectManager.AddRequestedEffects(IEffectableObject, IEnumerable(Of EffectInfo), String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MacacaGames.EffectSystem.EffectManager.AddRequestedEffects(MacacaGames.EffectSystem.IEffectableObject, IEnumerable(Of MacacaGames.EffectSystem.Model.EffectInfo), System.String())
  name.vb: AddRequestedEffects(IEffectableObject, IEnumerable(Of EffectInfo), String())
- uid: MacacaGames.EffectSystem.EffectManager.AddEffect(MacacaGames.EffectSystem.IEffectableObject,MacacaGames.EffectSystem.Model.EffectInfo,System.String[])
  commentId: M:MacacaGames.EffectSystem.EffectManager.AddEffect(MacacaGames.EffectSystem.IEffectableObject,MacacaGames.EffectSystem.Model.EffectInfo,System.String[])
  id: AddEffect(MacacaGames.EffectSystem.IEffectableObject,MacacaGames.EffectSystem.Model.EffectInfo,System.String[])
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: AddEffect(IEffectableObject, EffectInfo, String[])
  nameWithType: EffectManager.AddEffect(IEffectableObject, EffectInfo, String[])
  fullName: MacacaGames.EffectSystem.EffectManager.AddEffect(MacacaGames.EffectSystem.IEffectableObject, MacacaGames.EffectSystem.Model.EffectInfo, System.String[])
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: AddEffect
    path: ../Runtime/EffectManager.cs
    startLine: 889
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  summary: 附加指定的Effect實體。
  example: []
  syntax:
    content: public void AddEffect(IEffectableObject owner, EffectInfo effectInfo, params string[] tags)
    parameters:
    - id: owner
      type: MacacaGames.EffectSystem.IEffectableObject
    - id: effectInfo
      type: MacacaGames.EffectSystem.Model.EffectInfo
    - id: tags
      type: System.String[]
    content.vb: Public Sub AddEffect(owner As IEffectableObject, effectInfo As EffectInfo, ParamArray tags As String())
  overload: MacacaGames.EffectSystem.EffectManager.AddEffect*
  nameWithType.vb: EffectManager.AddEffect(IEffectableObject, EffectInfo, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MacacaGames.EffectSystem.EffectManager.AddEffect(MacacaGames.EffectSystem.IEffectableObject, MacacaGames.EffectSystem.Model.EffectInfo, System.String())
  name.vb: AddEffect(IEffectableObject, EffectInfo, String())
- uid: MacacaGames.EffectSystem.EffectManager.AddEffects(MacacaGames.EffectSystem.IEffectableObject,IEnumerable{MacacaGames.EffectSystem.Model.EffectInfo},System.String[])
  commentId: M:MacacaGames.EffectSystem.EffectManager.AddEffects(MacacaGames.EffectSystem.IEffectableObject,IEnumerable{MacacaGames.EffectSystem.Model.EffectInfo},System.String[])
  id: AddEffects(MacacaGames.EffectSystem.IEffectableObject,IEnumerable{MacacaGames.EffectSystem.Model.EffectInfo},System.String[])
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: AddEffects(IEffectableObject, IEnumerable<EffectInfo>, String[])
  nameWithType: EffectManager.AddEffects(IEffectableObject, IEnumerable<EffectInfo>, String[])
  fullName: MacacaGames.EffectSystem.EffectManager.AddEffects(MacacaGames.EffectSystem.IEffectableObject, IEnumerable<MacacaGames.EffectSystem.Model.EffectInfo>, System.String[])
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: AddEffects
    path: ../Runtime/EffectManager.cs
    startLine: 933
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  summary: 附加複數指定的Effect實體。
  example: []
  syntax:
    content: public void AddEffects(IEffectableObject owner, IEnumerable<EffectInfo> effectInfos, params string[] tags)
    parameters:
    - id: owner
      type: MacacaGames.EffectSystem.IEffectableObject
    - id: effectInfos
      type: IEnumerable{MacacaGames.EffectSystem.Model.EffectInfo}
    - id: tags
      type: System.String[]
    content.vb: Public Sub AddEffects(owner As IEffectableObject, effectInfos As IEnumerable(Of EffectInfo), ParamArray tags As String())
  overload: MacacaGames.EffectSystem.EffectManager.AddEffects*
  nameWithType.vb: EffectManager.AddEffects(IEffectableObject, IEnumerable(Of EffectInfo), String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MacacaGames.EffectSystem.EffectManager.AddEffects(MacacaGames.EffectSystem.IEffectableObject, IEnumerable(Of MacacaGames.EffectSystem.Model.EffectInfo), System.String())
  name.vb: AddEffects(IEffectableObject, IEnumerable(Of EffectInfo), String())
- uid: MacacaGames.EffectSystem.EffectManager.RemoveEffectByTag(MacacaGames.EffectSystem.IEffectableObject,System.String)
  commentId: M:MacacaGames.EffectSystem.EffectManager.RemoveEffectByTag(MacacaGames.EffectSystem.IEffectableObject,System.String)
  id: RemoveEffectByTag(MacacaGames.EffectSystem.IEffectableObject,System.String)
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: RemoveEffectByTag(IEffectableObject, String)
  nameWithType: EffectManager.RemoveEffectByTag(IEffectableObject, String)
  fullName: MacacaGames.EffectSystem.EffectManager.RemoveEffectByTag(MacacaGames.EffectSystem.IEffectableObject, System.String)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: RemoveEffectByTag
    path: ../Runtime/EffectManager.cs
    startLine: 950
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  summary: 移除包含特定Tag的Effect。
  example: []
  syntax:
    content: public void RemoveEffectByTag(IEffectableObject owner, string tag)
    parameters:
    - id: owner
      type: MacacaGames.EffectSystem.IEffectableObject
    - id: tag
      type: System.String
    content.vb: Public Sub RemoveEffectByTag(owner As IEffectableObject, tag As String)
  overload: MacacaGames.EffectSystem.EffectManager.RemoveEffectByTag*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.RemoveEffectsByType(MacacaGames.EffectSystem.IEffectableObject,System.String)
  commentId: M:MacacaGames.EffectSystem.EffectManager.RemoveEffectsByType(MacacaGames.EffectSystem.IEffectableObject,System.String)
  id: RemoveEffectsByType(MacacaGames.EffectSystem.IEffectableObject,System.String)
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: RemoveEffectsByType(IEffectableObject, String)
  nameWithType: EffectManager.RemoveEffectsByType(IEffectableObject, String)
  fullName: MacacaGames.EffectSystem.EffectManager.RemoveEffectsByType(MacacaGames.EffectSystem.IEffectableObject, System.String)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: RemoveEffectsByType
    path: ../Runtime/EffectManager.cs
    startLine: 966
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  summary: 移除指定EffectType所有的Effect實體。
  example: []
  syntax:
    content: public void RemoveEffectsByType(IEffectableObject owner, string effectType)
    parameters:
    - id: owner
      type: MacacaGames.EffectSystem.IEffectableObject
    - id: effectType
      type: System.String
    content.vb: Public Sub RemoveEffectsByType(owner As IEffectableObject, effectType As String)
  overload: MacacaGames.EffectSystem.EffectManager.RemoveEffectsByType*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.RemoveEffect(MacacaGames.EffectSystem.IEffectableObject,MacacaGames.EffectSystem.EffectBase)
  commentId: M:MacacaGames.EffectSystem.EffectManager.RemoveEffect(MacacaGames.EffectSystem.IEffectableObject,MacacaGames.EffectSystem.EffectBase)
  id: RemoveEffect(MacacaGames.EffectSystem.IEffectableObject,MacacaGames.EffectSystem.EffectBase)
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: RemoveEffect(IEffectableObject, EffectBase)
  nameWithType: EffectManager.RemoveEffect(IEffectableObject, EffectBase)
  fullName: MacacaGames.EffectSystem.EffectManager.RemoveEffect(MacacaGames.EffectSystem.IEffectableObject, MacacaGames.EffectSystem.EffectBase)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: RemoveEffect
    path: ../Runtime/EffectManager.cs
    startLine: 980
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  summary: 移除指定Effect實體。
  example: []
  syntax:
    content: public void RemoveEffect(IEffectableObject owner, EffectBase effect)
    parameters:
    - id: owner
      type: MacacaGames.EffectSystem.IEffectableObject
    - id: effect
      type: MacacaGames.EffectSystem.EffectBase
    content.vb: Public Sub RemoveEffect(owner As IEffectableObject, effect As EffectBase)
  overload: MacacaGames.EffectSystem.EffectManager.RemoveEffect*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.GetEffectsByTag(MacacaGames.EffectSystem.IEffectableObject,System.String)
  commentId: M:MacacaGames.EffectSystem.EffectManager.GetEffectsByTag(MacacaGames.EffectSystem.IEffectableObject,System.String)
  id: GetEffectsByTag(MacacaGames.EffectSystem.IEffectableObject,System.String)
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: GetEffectsByTag(IEffectableObject, String)
  nameWithType: EffectManager.GetEffectsByTag(IEffectableObject, String)
  fullName: MacacaGames.EffectSystem.EffectManager.GetEffectsByTag(MacacaGames.EffectSystem.IEffectableObject, System.String)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: GetEffectsByTag
    path: ../Runtime/EffectManager.cs
    startLine: 1009
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  summary: 搜尋包含特定Tag的Effect。
  example: []
  syntax:
    content: public List<EffectBase> GetEffectsByTag(IEffectableObject owner, string tag)
    parameters:
    - id: owner
      type: MacacaGames.EffectSystem.IEffectableObject
    - id: tag
      type: System.String
    return:
      type: List{MacacaGames.EffectSystem.EffectBase}
    content.vb: Public Function GetEffectsByTag(owner As IEffectableObject, tag As String) As List(Of EffectBase)
  overload: MacacaGames.EffectSystem.EffectManager.GetEffectsByTag*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.EffectSystem.EffectManager.GetEffectsByType(MacacaGames.EffectSystem.IEffectableObject,System.String,System.Boolean)
  commentId: M:MacacaGames.EffectSystem.EffectManager.GetEffectsByType(MacacaGames.EffectSystem.IEffectableObject,System.String,System.Boolean)
  id: GetEffectsByType(MacacaGames.EffectSystem.IEffectableObject,System.String,System.Boolean)
  parent: MacacaGames.EffectSystem.EffectManager
  langs:
  - csharp
  - vb
  name: GetEffectsByType(IEffectableObject, String, Boolean)
  nameWithType: EffectManager.GetEffectsByType(IEffectableObject, String, Boolean)
  fullName: MacacaGames.EffectSystem.EffectManager.GetEffectsByType(MacacaGames.EffectSystem.IEffectableObject, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: Runtime/EffectManager.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: GetEffectsByType
    path: ../Runtime/EffectManager.cs
    startLine: 1027
  assemblies:
  - Macaca.EffectSystem
  namespace: MacacaGames.EffectSystem
  syntax:
    content: public List<EffectBase> GetEffectsByType(IEffectableObject owner, string type, bool onlyGetActive = false)
    parameters:
    - id: owner
      type: MacacaGames.EffectSystem.IEffectableObject
    - id: type
      type: System.String
    - id: onlyGetActive
      type: System.Boolean
    return:
      type: List{MacacaGames.EffectSystem.EffectBase}
    content.vb: Public Function GetEffectsByType(owner As IEffectableObject, type As String, onlyGetActive As Boolean = False) As List(Of EffectBase)
  overload: MacacaGames.EffectSystem.EffectManager.GetEffectsByType*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: MacacaGames.EffectSystem
  commentId: N:MacacaGames.EffectSystem
  name: MacacaGames.EffectSystem
  nameWithType: MacacaGames.EffectSystem
  fullName: MacacaGames.EffectSystem
- uid: MacacaGames.GameSystem.MonoBehaviourLifeCycle
  commentId: T:MacacaGames.GameSystem.MonoBehaviourLifeCycle
  parent: MacacaGames.GameSystem
  name: MonoBehaviourLifeCycle
  nameWithType: MonoBehaviourLifeCycle
  fullName: MacacaGames.GameSystem.MonoBehaviourLifeCycle
- uid: MacacaGames.GameSystem.IApplicationLifeCycle
  commentId: T:MacacaGames.GameSystem.IApplicationLifeCycle
  parent: MacacaGames.GameSystem
  name: IApplicationLifeCycle
  nameWithType: IApplicationLifeCycle
  fullName: MacacaGames.GameSystem.IApplicationLifeCycle
- uid: MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnApplicationUpdate
  commentId: M:MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnApplicationUpdate
  parent: MacacaGames.GameSystem.MonoBehaviourLifeCycle
  name: OnApplicationUpdate()
  nameWithType: MonoBehaviourLifeCycle.OnApplicationUpdate()
  fullName: MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnApplicationUpdate()
  spec.csharp:
  - uid: MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnApplicationUpdate
    name: OnApplicationUpdate
    nameWithType: MonoBehaviourLifeCycle.OnApplicationUpdate
    fullName: MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnApplicationUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnApplicationUpdate
    name: OnApplicationUpdate
    nameWithType: MonoBehaviourLifeCycle.OnApplicationUpdate
    fullName: MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnApplicationUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnEnterLobby
  commentId: M:MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnEnterLobby
  parent: MacacaGames.GameSystem.MonoBehaviourLifeCycle
  name: OnEnterLobby()
  nameWithType: MonoBehaviourLifeCycle.OnEnterLobby()
  fullName: MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnEnterLobby()
  spec.csharp:
  - uid: MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnEnterLobby
    name: OnEnterLobby
    nameWithType: MonoBehaviourLifeCycle.OnEnterLobby
    fullName: MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnEnterLobby
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnEnterLobby
    name: OnEnterLobby
    nameWithType: MonoBehaviourLifeCycle.OnEnterLobby
    fullName: MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnEnterLobby
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnGamePlayUpdate
  commentId: M:MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnGamePlayUpdate
  parent: MacacaGames.GameSystem.MonoBehaviourLifeCycle
  name: OnGamePlayUpdate()
  nameWithType: MonoBehaviourLifeCycle.OnGamePlayUpdate()
  fullName: MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnGamePlayUpdate()
  spec.csharp:
  - uid: MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnGamePlayUpdate
    name: OnGamePlayUpdate
    nameWithType: MonoBehaviourLifeCycle.OnGamePlayUpdate
    fullName: MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnGamePlayUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnGamePlayUpdate
    name: OnGamePlayUpdate
    nameWithType: MonoBehaviourLifeCycle.OnGamePlayUpdate
    fullName: MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnGamePlayUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnUnPauseGamePlayUpdate
  commentId: M:MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnUnPauseGamePlayUpdate
  parent: MacacaGames.GameSystem.MonoBehaviourLifeCycle
  name: OnUnPauseGamePlayUpdate()
  nameWithType: MonoBehaviourLifeCycle.OnUnPauseGamePlayUpdate()
  fullName: MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnUnPauseGamePlayUpdate()
  spec.csharp:
  - uid: MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnUnPauseGamePlayUpdate
    name: OnUnPauseGamePlayUpdate
    nameWithType: MonoBehaviourLifeCycle.OnUnPauseGamePlayUpdate
    fullName: MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnUnPauseGamePlayUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnUnPauseGamePlayUpdate
    name: OnUnPauseGamePlayUpdate
    nameWithType: MonoBehaviourLifeCycle.OnUnPauseGamePlayUpdate
    fullName: MacacaGames.GameSystem.MonoBehaviourLifeCycle.OnUnPauseGamePlayUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MacacaGames.GameSystem
  commentId: N:MacacaGames.GameSystem
  name: MacacaGames.GameSystem
  nameWithType: MacacaGames.GameSystem
  fullName: MacacaGames.GameSystem
- uid: Dictionary{System.String,Type}
  commentId: '!:Dictionary{System.String,Type}'
  definition: Dictionary`2
  name: Dictionary<String, Type>
  nameWithType: Dictionary<String, Type>
  fullName: Dictionary<System.String, Type>
  nameWithType.vb: Dictionary(Of String, Type)
  fullName.vb: Dictionary(Of System.String, Type)
  name.vb: Dictionary(Of String, Type)
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: MacacaGames.EffectSystem.EffectManager.QueryEffectTypeWithDefault*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.QueryEffectTypeWithDefault
  name: QueryEffectTypeWithDefault
  nameWithType: EffectManager.QueryEffectTypeWithDefault
  fullName: MacacaGames.EffectSystem.EffectManager.QueryEffectTypeWithDefault
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Type
  commentId: '!:Type'
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: Func{System.String,System.String}
  commentId: '!:Func{System.String,System.String}'
  definition: Func`2
  name: Func<String, String>
  nameWithType: Func<String, String>
  fullName: Func<System.String, System.String>
  nameWithType.vb: Func(Of String, String)
  fullName.vb: Func(Of System.String, System.String)
  name.vb: Func(Of String, String)
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Func`2
  isExternal: true
  name: Func<, >
  nameWithType: Func<, >
  fullName: Func<, >
  nameWithType.vb: Func(Of , )
  fullName.vb: Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Dictionary{System.String,Func{Action{MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo},IEnumerator}}
  commentId: '!:Dictionary{System.String,Func{Action{MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo},IEnumerator}}'
  definition: Dictionary`2
  name: Dictionary<String, Func<Action<EffectManager.EffectTriggerConditionInfo>, IEnumerator>>
  nameWithType: Dictionary<String, Func<Action<EffectManager.EffectTriggerConditionInfo>, IEnumerator>>
  fullName: Dictionary<System.String, Func<Action<MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo>, IEnumerator>>
  nameWithType.vb: Dictionary(Of String, Func(Of Action(Of EffectManager.EffectTriggerConditionInfo), IEnumerator))
  fullName.vb: Dictionary(Of System.String, Func(Of Action(Of MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo), IEnumerator))
  name.vb: Dictionary(Of String, Func(Of Action(Of EffectManager.EffectTriggerConditionInfo), IEnumerator))
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo
    name: EffectManager.EffectTriggerConditionInfo
    nameWithType: EffectManager.EffectTriggerConditionInfo
    fullName: MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo
    name: EffectManager.EffectTriggerConditionInfo
    nameWithType: EffectManager.EffectTriggerConditionInfo
    fullName: MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MacacaGames.EffectSystem.EffectCalculator
  commentId: T:MacacaGames.EffectSystem.EffectCalculator
  parent: MacacaGames.EffectSystem
  name: EffectCalculator
  nameWithType: EffectCalculator
  fullName: MacacaGames.EffectSystem.EffectCalculator
- uid: MacacaGames.GameSystem.MonoBehaviourLifeCycle.Init
  commentId: M:MacacaGames.GameSystem.MonoBehaviourLifeCycle.Init
  parent: MacacaGames.GameSystem.MonoBehaviourLifeCycle
  name: Init()
  nameWithType: MonoBehaviourLifeCycle.Init()
  fullName: MacacaGames.GameSystem.MonoBehaviourLifeCycle.Init()
  spec.csharp:
  - uid: MacacaGames.GameSystem.MonoBehaviourLifeCycle.Init
    name: Init
    nameWithType: MonoBehaviourLifeCycle.Init
    fullName: MacacaGames.GameSystem.MonoBehaviourLifeCycle.Init
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MacacaGames.GameSystem.MonoBehaviourLifeCycle.Init
    name: Init
    nameWithType: MonoBehaviourLifeCycle.Init
    fullName: MacacaGames.GameSystem.MonoBehaviourLifeCycle.Init
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MacacaGames.EffectSystem.EffectManager.Init*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.Init
  name: Init
  nameWithType: EffectManager.Init
  fullName: MacacaGames.EffectSystem.EffectManager.Init
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: MacacaGames.EffectSystem.EffectManager.CleanEffectableObject*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.CleanEffectableObject
  name: CleanEffectableObject
  nameWithType: EffectManager.CleanEffectableObject
  fullName: MacacaGames.EffectSystem.EffectManager.CleanEffectableObject
- uid: MacacaGames.EffectSystem.IEffectableObject
  commentId: T:MacacaGames.EffectSystem.IEffectableObject
  parent: MacacaGames.EffectSystem
  name: IEffectableObject
  nameWithType: IEffectableObject
  fullName: MacacaGames.EffectSystem.IEffectableObject
- uid: MacacaGames.EffectSystem.EffectManager.UpdateEffectMaintainAction*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.UpdateEffectMaintainAction
  name: UpdateEffectMaintainAction
  nameWithType: EffectManager.UpdateEffectMaintainAction
  fullName: MacacaGames.EffectSystem.EffectManager.UpdateEffectMaintainAction
- uid: MacacaGames.EffectSystem.EffectManager.UpdateEffectMaintainRound*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.UpdateEffectMaintainRound
  name: UpdateEffectMaintainRound
  nameWithType: EffectManager.UpdateEffectMaintainRound
  fullName: MacacaGames.EffectSystem.EffectManager.UpdateEffectMaintainRound
- uid: MacacaGames.EffectSystem.EffectManager.ResetEffectActiveTimeAndCooldownTime*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.ResetEffectActiveTimeAndCooldownTime
  name: ResetEffectActiveTimeAndCooldownTime
  nameWithType: EffectManager.ResetEffectActiveTimeAndCooldownTime
  fullName: MacacaGames.EffectSystem.EffectManager.ResetEffectActiveTimeAndCooldownTime
- uid: Dictionary{GameObject,Queue{MacacaGames.EffectSystem.EffectViewBase}}
  commentId: '!:Dictionary{GameObject,Queue{MacacaGames.EffectSystem.EffectViewBase}}'
  definition: Dictionary`2
  name: Dictionary<GameObject, Queue<EffectViewBase>>
  nameWithType: Dictionary<GameObject, Queue<EffectViewBase>>
  fullName: Dictionary<GameObject, Queue<MacacaGames.EffectSystem.EffectViewBase>>
  nameWithType.vb: Dictionary(Of GameObject, Queue(Of EffectViewBase))
  fullName.vb: Dictionary(Of GameObject, Queue(Of MacacaGames.EffectSystem.EffectViewBase))
  name.vb: Dictionary(Of GameObject, Queue(Of EffectViewBase))
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Queue`1
    name: Queue
    nameWithType: Queue
    fullName: Queue
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MacacaGames.EffectSystem.EffectViewBase
    name: EffectViewBase
    nameWithType: EffectViewBase
    fullName: MacacaGames.EffectSystem.EffectViewBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Queue`1
    name: Queue
    nameWithType: Queue
    fullName: Queue
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MacacaGames.EffectSystem.EffectViewBase
    name: EffectViewBase
    nameWithType: EffectViewBase
    fullName: MacacaGames.EffectSystem.EffectViewBase
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MacacaGames.EffectSystem.EffectManager.RequestEffectView*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.RequestEffectView
  name: RequestEffectView
  nameWithType: EffectManager.RequestEffectView
  fullName: MacacaGames.EffectSystem.EffectManager.RequestEffectView
- uid: MacacaGames.EffectSystem.Model.EffectInfo
  commentId: T:MacacaGames.EffectSystem.Model.EffectInfo
  parent: MacacaGames.EffectSystem.Model
  name: EffectInfo
  nameWithType: EffectInfo
  fullName: MacacaGames.EffectSystem.Model.EffectInfo
- uid: MacacaGames.EffectSystem.Model.EffectViewInfo
  commentId: T:MacacaGames.EffectSystem.Model.EffectViewInfo
  parent: MacacaGames.EffectSystem.Model
  name: EffectViewInfo
  nameWithType: EffectViewInfo
  fullName: MacacaGames.EffectSystem.Model.EffectViewInfo
- uid: MacacaGames.EffectSystem.EffectViewBase
  commentId: T:MacacaGames.EffectSystem.EffectViewBase
  parent: MacacaGames.EffectSystem
  name: EffectViewBase
  nameWithType: EffectViewBase
  fullName: MacacaGames.EffectSystem.EffectViewBase
- uid: MacacaGames.EffectSystem.Model
  commentId: N:MacacaGames.EffectSystem.Model
  name: MacacaGames.EffectSystem.Model
  nameWithType: MacacaGames.EffectSystem.Model
  fullName: MacacaGames.EffectSystem.Model
- uid: MacacaGames.EffectSystem.EffectManager.RecoveryEffectView*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.RecoveryEffectView
  name: RecoveryEffectView
  nameWithType: EffectManager.RecoveryEffectView
  fullName: MacacaGames.EffectSystem.EffectManager.RecoveryEffectView
- uid: MacacaGames.EffectSystem.EffectManager.ResetEffectableObjectQuery*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.ResetEffectableObjectQuery
  name: ResetEffectableObjectQuery
  nameWithType: EffectManager.ResetEffectableObjectQuery
  fullName: MacacaGames.EffectSystem.EffectManager.ResetEffectableObjectQuery
- uid: MacacaGames.EffectSystem.EffectManager.EffectTriggerCondition*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.EffectTriggerCondition
  name: EffectTriggerCondition
  nameWithType: EffectManager.EffectTriggerCondition
  fullName: MacacaGames.EffectSystem.EffectManager.EffectTriggerCondition
- uid: MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo
  commentId: T:MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo
  parent: MacacaGames.EffectSystem
  name: EffectManager.EffectTriggerConditionInfo
  nameWithType: EffectManager.EffectTriggerConditionInfo
  fullName: MacacaGames.EffectSystem.EffectManager.EffectTriggerConditionInfo
- uid: MacacaGames.EffectSystem.EffectManager.RegistEffectTriggerCondition*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.RegistEffectTriggerCondition
  name: RegistEffectTriggerCondition
  nameWithType: EffectManager.RegistEffectTriggerCondition
  fullName: MacacaGames.EffectSystem.EffectManager.RegistEffectTriggerCondition
- uid: MacacaGames.EffectSystem.EffectBase
  commentId: T:MacacaGames.EffectSystem.EffectBase
  parent: MacacaGames.EffectSystem
  name: EffectBase
  nameWithType: EffectBase
  fullName: MacacaGames.EffectSystem.EffectBase
- uid: MacacaGames.EffectSystem.EffectManager.UnregistEffectTriggerCondition*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.UnregistEffectTriggerCondition
  name: UnregistEffectTriggerCondition
  nameWithType: EffectManager.UnregistEffectTriggerCondition
  fullName: MacacaGames.EffectSystem.EffectManager.UnregistEffectTriggerCondition
- uid: MacacaGames.EffectSystem.EffectManager.RequestEffect*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.RequestEffect
  name: RequestEffect
  nameWithType: EffectManager.RequestEffect
  fullName: MacacaGames.EffectSystem.EffectManager.RequestEffect
- uid: MacacaGames.EffectSystem.EffectManager.RecoveryEffectBase*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.RecoveryEffectBase
  name: RecoveryEffectBase
  nameWithType: EffectManager.RecoveryEffectBase
  fullName: MacacaGames.EffectSystem.EffectManager.RecoveryEffectBase
- uid: MacacaGames.EffectSystem.EffectManager.CreateEffect*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.CreateEffect
  name: CreateEffect
  nameWithType: EffectManager.CreateEffect
  fullName: MacacaGames.EffectSystem.EffectManager.CreateEffect
- uid: MacacaGames.EffectSystem.EffectManager.GetDefaultEffectsDescription*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.GetDefaultEffectsDescription
  name: GetDefaultEffectsDescription
  nameWithType: EffectManager.GetDefaultEffectsDescription
  fullName: MacacaGames.EffectSystem.EffectManager.GetDefaultEffectsDescription
- uid: IEnumerable{MacacaGames.EffectSystem.Model.EffectInfo}
  commentId: '!:IEnumerable{MacacaGames.EffectSystem.Model.EffectInfo}'
  definition: IEnumerable`1
  name: IEnumerable<EffectInfo>
  nameWithType: IEnumerable<EffectInfo>
  fullName: IEnumerable<MacacaGames.EffectSystem.Model.EffectInfo>
  nameWithType.vb: IEnumerable(Of EffectInfo)
  fullName.vb: IEnumerable(Of MacacaGames.EffectSystem.Model.EffectInfo)
  name.vb: IEnumerable(Of EffectInfo)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MacacaGames.EffectSystem.Model.EffectInfo
    name: EffectInfo
    nameWithType: EffectInfo
    fullName: MacacaGames.EffectSystem.Model.EffectInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MacacaGames.EffectSystem.Model.EffectInfo
    name: EffectInfo
    nameWithType: EffectInfo
    fullName: MacacaGames.EffectSystem.Model.EffectInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: MacacaGames.EffectSystem.EffectManager.GetDefaultEffectsDescriptions*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.GetDefaultEffectsDescriptions
  name: GetDefaultEffectsDescriptions
  nameWithType: EffectManager.GetDefaultEffectsDescriptions
  fullName: MacacaGames.EffectSystem.EffectManager.GetDefaultEffectsDescriptions
- uid: IEnumerable{System.String}
  commentId: '!:IEnumerable{System.String}'
  definition: IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MacacaGames.EffectSystem.EffectManager.GetDefaultEffectDescription*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.GetDefaultEffectDescription
  name: GetDefaultEffectDescription
  nameWithType: EffectManager.GetDefaultEffectDescription
  fullName: MacacaGames.EffectSystem.EffectManager.GetDefaultEffectDescription
- uid: MacacaGames.EffectSystem.EffectManager.GetCustomEffectsDescription*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.GetCustomEffectsDescription
  name: GetCustomEffectsDescription
  nameWithType: EffectManager.GetCustomEffectsDescription
  fullName: MacacaGames.EffectSystem.EffectManager.GetCustomEffectsDescription
- uid: MacacaGames.EffectSystem.EffectManager.GetColorNumberDescription*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.GetColorNumberDescription
  name: GetColorNumberDescription
  nameWithType: EffectManager.GetColorNumberDescription
  fullName: MacacaGames.EffectSystem.EffectManager.GetColorNumberDescription
- uid: Color
  commentId: '!:Color'
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Color
- uid: MacacaGames.EffectSystem.EffectManager.GetEffectListByType*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.GetEffectListByType
  name: GetEffectListByType
  nameWithType: EffectManager.GetEffectListByType
  fullName: MacacaGames.EffectSystem.EffectManager.GetEffectListByType
- uid: MacacaGames.EffectSystem.EffectManager.EffectList
  commentId: T:MacacaGames.EffectSystem.EffectManager.EffectList
  parent: MacacaGames.EffectSystem
  name: EffectManager.EffectList
  nameWithType: EffectManager.EffectList
  fullName: MacacaGames.EffectSystem.EffectManager.EffectList
- uid: MacacaGames.EffectSystem.EffectManager.GetEffectSum*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.GetEffectSum
  name: GetEffectSum
  nameWithType: EffectManager.GetEffectSum
  fullName: MacacaGames.EffectSystem.EffectManager.GetEffectSum
- uid: System.Single
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: MacacaGames.EffectSystem.EffectManager.GetEffectsSum*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.GetEffectsSum
  name: GetEffectsSum
  nameWithType: EffectManager.GetEffectsSum
  fullName: MacacaGames.EffectSystem.EffectManager.GetEffectsSum
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: MacacaGames.EffectSystem.EffectManager.AddRequestedEffect*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.AddRequestedEffect
  name: AddRequestedEffect
  nameWithType: EffectManager.AddRequestedEffect
  fullName: MacacaGames.EffectSystem.EffectManager.AddRequestedEffect
- uid: MacacaGames.EffectSystem.EffectManager.AddRequestedEffects*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.AddRequestedEffects
  name: AddRequestedEffects
  nameWithType: EffectManager.AddRequestedEffects
  fullName: MacacaGames.EffectSystem.EffectManager.AddRequestedEffects
- uid: MacacaGames.EffectSystem.EffectManager.AddEffect*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.AddEffect
  name: AddEffect
  nameWithType: EffectManager.AddEffect
  fullName: MacacaGames.EffectSystem.EffectManager.AddEffect
- uid: MacacaGames.EffectSystem.EffectManager.AddEffects*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.AddEffects
  name: AddEffects
  nameWithType: EffectManager.AddEffects
  fullName: MacacaGames.EffectSystem.EffectManager.AddEffects
- uid: MacacaGames.EffectSystem.EffectManager.RemoveEffectByTag*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.RemoveEffectByTag
  name: RemoveEffectByTag
  nameWithType: EffectManager.RemoveEffectByTag
  fullName: MacacaGames.EffectSystem.EffectManager.RemoveEffectByTag
- uid: MacacaGames.EffectSystem.EffectManager.RemoveEffectsByType*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.RemoveEffectsByType
  name: RemoveEffectsByType
  nameWithType: EffectManager.RemoveEffectsByType
  fullName: MacacaGames.EffectSystem.EffectManager.RemoveEffectsByType
- uid: MacacaGames.EffectSystem.EffectManager.RemoveEffect*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.RemoveEffect
  name: RemoveEffect
  nameWithType: EffectManager.RemoveEffect
  fullName: MacacaGames.EffectSystem.EffectManager.RemoveEffect
- uid: MacacaGames.EffectSystem.EffectManager.GetEffectsByTag*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.GetEffectsByTag
  name: GetEffectsByTag
  nameWithType: EffectManager.GetEffectsByTag
  fullName: MacacaGames.EffectSystem.EffectManager.GetEffectsByTag
- uid: List{MacacaGames.EffectSystem.EffectBase}
  commentId: '!:List{MacacaGames.EffectSystem.EffectBase}'
  definition: List`1
  name: List<EffectBase>
  nameWithType: List<EffectBase>
  fullName: List<MacacaGames.EffectSystem.EffectBase>
  nameWithType.vb: List(Of EffectBase)
  fullName.vb: List(Of MacacaGames.EffectSystem.EffectBase)
  name.vb: List(Of EffectBase)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MacacaGames.EffectSystem.EffectBase
    name: EffectBase
    nameWithType: EffectBase
    fullName: MacacaGames.EffectSystem.EffectBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MacacaGames.EffectSystem.EffectBase
    name: EffectBase
    nameWithType: EffectBase
    fullName: MacacaGames.EffectSystem.EffectBase
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: MacacaGames.EffectSystem.EffectManager.GetEffectsByType*
  commentId: Overload:MacacaGames.EffectSystem.EffectManager.GetEffectsByType
  name: GetEffectsByType
  nameWithType: EffectManager.GetEffectsByType
  fullName: MacacaGames.EffectSystem.EffectManager.GetEffectsByType
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
