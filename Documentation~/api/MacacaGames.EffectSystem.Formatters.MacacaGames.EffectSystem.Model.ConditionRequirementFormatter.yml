### YamlMime:ManagedReference
items:
- uid: MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model.ConditionRequirementFormatter
  commentId: T:MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model.ConditionRequirementFormatter
  id: ConditionRequirementFormatter
  parent: MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model
  children:
  - MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model.ConditionRequirementFormatter.Deserialize(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
  - MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model.ConditionRequirementFormatter.Serialize(MessagePack.MessagePackWriter@,MacacaGames.EffectSystem.Model.ConditionRequirement,MessagePack.MessagePackSerializerOptions)
  langs:
  - csharp
  - vb
  name: ConditionRequirementFormatter
  nameWithType: ConditionRequirementFormatter
  fullName: MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model.ConditionRequirementFormatter
  type: Class
  source:
    remote:
      path: Model/EffectSystem.Generated.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: ConditionRequirementFormatter
    path: ../Model/EffectSystem.Generated.cs
    startLine: 166
  assemblies:
  - Macaca.EffectSystem.Model
  namespace: MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model
  syntax:
    content: 'public sealed class ConditionRequirementFormatter : object, IMessagePackFormatter<ConditionRequirement>, IMessagePackFormatter'
    content.vb: >-
      Public NotInheritable Class ConditionRequirementFormatter
          Inherits Object
          Implements IMessagePackFormatter(Of ConditionRequirement), IMessagePackFormatter
  inheritance:
  - System.Object
  implements:
  - MessagePack.Formatters.IMessagePackFormatter{MacacaGames.EffectSystem.Model.ConditionRequirement}
  - MessagePack.Formatters.IMessagePackFormatter
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model.ConditionRequirementFormatter.Serialize(MessagePack.MessagePackWriter@,MacacaGames.EffectSystem.Model.ConditionRequirement,MessagePack.MessagePackSerializerOptions)
  commentId: M:MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model.ConditionRequirementFormatter.Serialize(MessagePack.MessagePackWriter@,MacacaGames.EffectSystem.Model.ConditionRequirement,MessagePack.MessagePackSerializerOptions)
  id: Serialize(MessagePack.MessagePackWriter@,MacacaGames.EffectSystem.Model.ConditionRequirement,MessagePack.MessagePackSerializerOptions)
  parent: MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model.ConditionRequirementFormatter
  langs:
  - csharp
  - vb
  name: Serialize(ref MessagePackWriter, ConditionRequirement, MessagePackSerializerOptions)
  nameWithType: ConditionRequirementFormatter.Serialize(ref MessagePackWriter, ConditionRequirement, MessagePackSerializerOptions)
  fullName: MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model.ConditionRequirementFormatter.Serialize(ref MessagePack.MessagePackWriter, MacacaGames.EffectSystem.Model.ConditionRequirement, MessagePack.MessagePackSerializerOptions)
  type: Method
  source:
    remote:
      path: Model/EffectSystem.Generated.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: Serialize
    path: ../Model/EffectSystem.Generated.cs
    startLine: 177
  assemblies:
  - Macaca.EffectSystem.Model
  namespace: MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model
  syntax:
    content: public void Serialize(ref MessagePackWriter writer, ConditionRequirement value, MessagePackSerializerOptions options)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: value
      type: MacacaGames.EffectSystem.Model.ConditionRequirement
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    content.vb: Public Sub Serialize(ByRef writer As MessagePackWriter, value As ConditionRequirement, options As MessagePackSerializerOptions)
  overload: MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model.ConditionRequirementFormatter.Serialize*
  implements:
  - MessagePack.Formatters.IMessagePackFormatter{MacacaGames.EffectSystem.Model.ConditionRequirement}.Serialize(MessagePack.MessagePackWriter@,MacacaGames.EffectSystem.Model.ConditionRequirement,MessagePack.MessagePackSerializerOptions)
  nameWithType.vb: ConditionRequirementFormatter.Serialize(ByRef MessagePackWriter, ConditionRequirement, MessagePackSerializerOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model.ConditionRequirementFormatter.Serialize(ByRef MessagePack.MessagePackWriter, MacacaGames.EffectSystem.Model.ConditionRequirement, MessagePack.MessagePackSerializerOptions)
  name.vb: Serialize(ByRef MessagePackWriter, ConditionRequirement, MessagePackSerializerOptions)
- uid: MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model.ConditionRequirementFormatter.Deserialize(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
  commentId: M:MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model.ConditionRequirementFormatter.Deserialize(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
  id: Deserialize(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
  parent: MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model.ConditionRequirementFormatter
  langs:
  - csharp
  - vb
  name: Deserialize(ref MessagePackReader, MessagePackSerializerOptions)
  nameWithType: ConditionRequirementFormatter.Deserialize(ref MessagePackReader, MessagePackSerializerOptions)
  fullName: MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model.ConditionRequirementFormatter.Deserialize(ref MessagePack.MessagePackReader, MessagePack.MessagePackSerializerOptions)
  type: Method
  source:
    remote:
      path: Model/EffectSystem.Generated.cs
      branch: main
      repo: git@github.com:MacacaGames/EffectSystem.git
    id: Deserialize
    path: ../Model/EffectSystem.Generated.cs
    startLine: 191
  assemblies:
  - Macaca.EffectSystem.Model
  namespace: MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model
  syntax:
    content: public ConditionRequirement Deserialize(ref MessagePackReader reader, MessagePackSerializerOptions options)
    parameters:
    - id: reader
      type: MessagePack.MessagePackReader
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    return:
      type: MacacaGames.EffectSystem.Model.ConditionRequirement
    content.vb: Public Function Deserialize(ByRef reader As MessagePackReader, options As MessagePackSerializerOptions) As ConditionRequirement
  overload: MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model.ConditionRequirementFormatter.Deserialize*
  implements:
  - MessagePack.Formatters.IMessagePackFormatter{MacacaGames.EffectSystem.Model.ConditionRequirement}.Deserialize(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
  nameWithType.vb: ConditionRequirementFormatter.Deserialize(ByRef MessagePackReader, MessagePackSerializerOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model.ConditionRequirementFormatter.Deserialize(ByRef MessagePack.MessagePackReader, MessagePack.MessagePackSerializerOptions)
  name.vb: Deserialize(ByRef MessagePackReader, MessagePackSerializerOptions)
references:
- uid: MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model
  commentId: N:MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model
  name: MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model
  nameWithType: MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model
  fullName: MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model
- uid: MessagePack.Formatters.IMessagePackFormatter{MacacaGames.EffectSystem.Model.ConditionRequirement}
  commentId: T:MessagePack.Formatters.IMessagePackFormatter{MacacaGames.EffectSystem.Model.ConditionRequirement}
  parent: MessagePack.Formatters
  definition: MessagePack.Formatters.IMessagePackFormatter`1
  name: IMessagePackFormatter<ConditionRequirement>
  nameWithType: IMessagePackFormatter<ConditionRequirement>
  fullName: MessagePack.Formatters.IMessagePackFormatter<MacacaGames.EffectSystem.Model.ConditionRequirement>
  nameWithType.vb: IMessagePackFormatter(Of ConditionRequirement)
  fullName.vb: MessagePack.Formatters.IMessagePackFormatter(Of MacacaGames.EffectSystem.Model.ConditionRequirement)
  name.vb: IMessagePackFormatter(Of ConditionRequirement)
  spec.csharp:
  - uid: MessagePack.Formatters.IMessagePackFormatter`1
    name: IMessagePackFormatter
    nameWithType: IMessagePackFormatter
    fullName: MessagePack.Formatters.IMessagePackFormatter
  - name: <
    nameWithType: <
    fullName: <
  - uid: MacacaGames.EffectSystem.Model.ConditionRequirement
    name: ConditionRequirement
    nameWithType: ConditionRequirement
    fullName: MacacaGames.EffectSystem.Model.ConditionRequirement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MessagePack.Formatters.IMessagePackFormatter`1
    name: IMessagePackFormatter
    nameWithType: IMessagePackFormatter
    fullName: MessagePack.Formatters.IMessagePackFormatter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MacacaGames.EffectSystem.Model.ConditionRequirement
    name: ConditionRequirement
    nameWithType: ConditionRequirement
    fullName: MacacaGames.EffectSystem.Model.ConditionRequirement
  - name: )
    nameWithType: )
    fullName: )
- uid: MessagePack.Formatters.IMessagePackFormatter
  commentId: T:MessagePack.Formatters.IMessagePackFormatter
  parent: MessagePack.Formatters
  name: IMessagePackFormatter
  nameWithType: IMessagePackFormatter
  fullName: MessagePack.Formatters.IMessagePackFormatter
- uid: MessagePack.Formatters.IMessagePackFormatter`1
  commentId: T:MessagePack.Formatters.IMessagePackFormatter`1
  name: IMessagePackFormatter<T>
  nameWithType: IMessagePackFormatter<T>
  fullName: MessagePack.Formatters.IMessagePackFormatter<T>
  nameWithType.vb: IMessagePackFormatter(Of T)
  fullName.vb: MessagePack.Formatters.IMessagePackFormatter(Of T)
  name.vb: IMessagePackFormatter(Of T)
  spec.csharp:
  - uid: MessagePack.Formatters.IMessagePackFormatter`1
    name: IMessagePackFormatter
    nameWithType: IMessagePackFormatter
    fullName: MessagePack.Formatters.IMessagePackFormatter
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MessagePack.Formatters.IMessagePackFormatter`1
    name: IMessagePackFormatter
    nameWithType: IMessagePackFormatter
    fullName: MessagePack.Formatters.IMessagePackFormatter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MessagePack.Formatters
  commentId: N:MessagePack.Formatters
  name: MessagePack.Formatters
  nameWithType: MessagePack.Formatters
  fullName: MessagePack.Formatters
- uid: MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model.ConditionRequirementFormatter.Serialize*
  commentId: Overload:MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model.ConditionRequirementFormatter.Serialize
  name: Serialize
  nameWithType: ConditionRequirementFormatter.Serialize
  fullName: MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model.ConditionRequirementFormatter.Serialize
- uid: MessagePack.Formatters.IMessagePackFormatter{MacacaGames.EffectSystem.Model.ConditionRequirement}.Serialize(MessagePack.MessagePackWriter@,MacacaGames.EffectSystem.Model.ConditionRequirement,MessagePack.MessagePackSerializerOptions)
  commentId: M:MessagePack.Formatters.IMessagePackFormatter{MacacaGames.EffectSystem.Model.ConditionRequirement}.Serialize(MessagePack.MessagePackWriter@,MacacaGames.EffectSystem.Model.ConditionRequirement,MessagePack.MessagePackSerializerOptions)
  parent: MessagePack.Formatters.IMessagePackFormatter{MacacaGames.EffectSystem.Model.ConditionRequirement}
  definition: MessagePack.Formatters.IMessagePackFormatter`1.Serialize(MessagePack.MessagePackWriter@,`0,MessagePack.MessagePackSerializerOptions)
  name: Serialize(MessagePackWriter, ConditionRequirement, MessagePackSerializerOptions)
  nameWithType: IMessagePackFormatter<ConditionRequirement>.Serialize(MessagePackWriter, ConditionRequirement, MessagePackSerializerOptions)
  fullName: MessagePack.Formatters.IMessagePackFormatter<MacacaGames.EffectSystem.Model.ConditionRequirement>.Serialize(MessagePack.MessagePackWriter, MacacaGames.EffectSystem.Model.ConditionRequirement, MessagePack.MessagePackSerializerOptions)
  nameWithType.vb: IMessagePackFormatter(Of ConditionRequirement).Serialize(MessagePackWriter, ConditionRequirement, MessagePackSerializerOptions)
  fullName.vb: MessagePack.Formatters.IMessagePackFormatter(Of MacacaGames.EffectSystem.Model.ConditionRequirement).Serialize(MessagePack.MessagePackWriter, MacacaGames.EffectSystem.Model.ConditionRequirement, MessagePack.MessagePackSerializerOptions)
  spec.csharp:
  - uid: MessagePack.Formatters.IMessagePackFormatter`1.Serialize(MessagePack.MessagePackWriter@,`0,MessagePack.MessagePackSerializerOptions)
    name: Serialize
    nameWithType: IMessagePackFormatter<ConditionRequirement>.Serialize
    fullName: MessagePack.Formatters.IMessagePackFormatter<MacacaGames.EffectSystem.Model.ConditionRequirement>.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: MessagePack.MessagePackWriter
    name: MessagePackWriter
    nameWithType: MessagePackWriter
    fullName: MessagePack.MessagePackWriter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MacacaGames.EffectSystem.Model.ConditionRequirement
    name: ConditionRequirement
    nameWithType: ConditionRequirement
    fullName: MacacaGames.EffectSystem.Model.ConditionRequirement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MessagePack.MessagePackSerializerOptions
    name: MessagePackSerializerOptions
    nameWithType: MessagePackSerializerOptions
    fullName: MessagePack.MessagePackSerializerOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MessagePack.Formatters.IMessagePackFormatter`1.Serialize(MessagePack.MessagePackWriter@,`0,MessagePack.MessagePackSerializerOptions)
    name: Serialize
    nameWithType: IMessagePackFormatter(Of ConditionRequirement).Serialize
    fullName: MessagePack.Formatters.IMessagePackFormatter(Of MacacaGames.EffectSystem.Model.ConditionRequirement).Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: MessagePack.MessagePackWriter
    name: MessagePackWriter
    nameWithType: MessagePackWriter
    fullName: MessagePack.MessagePackWriter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MacacaGames.EffectSystem.Model.ConditionRequirement
    name: ConditionRequirement
    nameWithType: ConditionRequirement
    fullName: MacacaGames.EffectSystem.Model.ConditionRequirement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MessagePack.MessagePackSerializerOptions
    name: MessagePackSerializerOptions
    nameWithType: MessagePackSerializerOptions
    fullName: MessagePack.MessagePackSerializerOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: MessagePack.MessagePackWriter
  commentId: T:MessagePack.MessagePackWriter
  parent: MessagePack
  name: MessagePackWriter
  nameWithType: MessagePackWriter
  fullName: MessagePack.MessagePackWriter
- uid: MacacaGames.EffectSystem.Model.ConditionRequirement
  commentId: T:MacacaGames.EffectSystem.Model.ConditionRequirement
  parent: MacacaGames.EffectSystem.Model
  name: ConditionRequirement
  nameWithType: ConditionRequirement
  fullName: MacacaGames.EffectSystem.Model.ConditionRequirement
- uid: MessagePack.MessagePackSerializerOptions
  commentId: T:MessagePack.MessagePackSerializerOptions
  parent: MessagePack
  name: MessagePackSerializerOptions
  nameWithType: MessagePackSerializerOptions
  fullName: MessagePack.MessagePackSerializerOptions
- uid: MessagePack.Formatters.IMessagePackFormatter`1.Serialize(MessagePack.MessagePackWriter@,`0,MessagePack.MessagePackSerializerOptions)
  commentId: M:MessagePack.Formatters.IMessagePackFormatter`1.Serialize(MessagePack.MessagePackWriter@,`0,MessagePack.MessagePackSerializerOptions)
  name: Serialize(MessagePackWriter, T, MessagePackSerializerOptions)
  nameWithType: IMessagePackFormatter<T>.Serialize(MessagePackWriter, T, MessagePackSerializerOptions)
  fullName: MessagePack.Formatters.IMessagePackFormatter<T>.Serialize(MessagePack.MessagePackWriter, T, MessagePack.MessagePackSerializerOptions)
  nameWithType.vb: IMessagePackFormatter(Of T).Serialize(MessagePackWriter, T, MessagePackSerializerOptions)
  fullName.vb: MessagePack.Formatters.IMessagePackFormatter(Of T).Serialize(MessagePack.MessagePackWriter, T, MessagePack.MessagePackSerializerOptions)
  spec.csharp:
  - uid: MessagePack.Formatters.IMessagePackFormatter`1.Serialize(MessagePack.MessagePackWriter@,`0,MessagePack.MessagePackSerializerOptions)
    name: Serialize
    nameWithType: IMessagePackFormatter<T>.Serialize
    fullName: MessagePack.Formatters.IMessagePackFormatter<T>.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: MessagePack.MessagePackWriter
    name: MessagePackWriter
    nameWithType: MessagePackWriter
    fullName: MessagePack.MessagePackWriter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MessagePack.MessagePackSerializerOptions
    name: MessagePackSerializerOptions
    nameWithType: MessagePackSerializerOptions
    fullName: MessagePack.MessagePackSerializerOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MessagePack.Formatters.IMessagePackFormatter`1.Serialize(MessagePack.MessagePackWriter@,`0,MessagePack.MessagePackSerializerOptions)
    name: Serialize
    nameWithType: IMessagePackFormatter(Of T).Serialize
    fullName: MessagePack.Formatters.IMessagePackFormatter(Of T).Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: MessagePack.MessagePackWriter
    name: MessagePackWriter
    nameWithType: MessagePackWriter
    fullName: MessagePack.MessagePackWriter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MessagePack.MessagePackSerializerOptions
    name: MessagePackSerializerOptions
    nameWithType: MessagePackSerializerOptions
    fullName: MessagePack.MessagePackSerializerOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: MessagePack
  commentId: N:MessagePack
  name: MessagePack
  nameWithType: MessagePack
  fullName: MessagePack
- uid: MacacaGames.EffectSystem.Model
  commentId: N:MacacaGames.EffectSystem.Model
  name: MacacaGames.EffectSystem.Model
  nameWithType: MacacaGames.EffectSystem.Model
  fullName: MacacaGames.EffectSystem.Model
- uid: MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model.ConditionRequirementFormatter.Deserialize*
  commentId: Overload:MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model.ConditionRequirementFormatter.Deserialize
  name: Deserialize
  nameWithType: ConditionRequirementFormatter.Deserialize
  fullName: MacacaGames.EffectSystem.Formatters.MacacaGames.EffectSystem.Model.ConditionRequirementFormatter.Deserialize
- uid: MessagePack.Formatters.IMessagePackFormatter{MacacaGames.EffectSystem.Model.ConditionRequirement}.Deserialize(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
  commentId: M:MessagePack.Formatters.IMessagePackFormatter{MacacaGames.EffectSystem.Model.ConditionRequirement}.Deserialize(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
  parent: MessagePack.Formatters.IMessagePackFormatter{MacacaGames.EffectSystem.Model.ConditionRequirement}
  definition: MessagePack.Formatters.IMessagePackFormatter`1.Deserialize(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
  name: Deserialize(MessagePackReader, MessagePackSerializerOptions)
  nameWithType: IMessagePackFormatter<ConditionRequirement>.Deserialize(MessagePackReader, MessagePackSerializerOptions)
  fullName: MessagePack.Formatters.IMessagePackFormatter<MacacaGames.EffectSystem.Model.ConditionRequirement>.Deserialize(MessagePack.MessagePackReader, MessagePack.MessagePackSerializerOptions)
  nameWithType.vb: IMessagePackFormatter(Of ConditionRequirement).Deserialize(MessagePackReader, MessagePackSerializerOptions)
  fullName.vb: MessagePack.Formatters.IMessagePackFormatter(Of MacacaGames.EffectSystem.Model.ConditionRequirement).Deserialize(MessagePack.MessagePackReader, MessagePack.MessagePackSerializerOptions)
  spec.csharp:
  - uid: MessagePack.Formatters.IMessagePackFormatter`1.Deserialize(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
    name: Deserialize
    nameWithType: IMessagePackFormatter<ConditionRequirement>.Deserialize
    fullName: MessagePack.Formatters.IMessagePackFormatter<MacacaGames.EffectSystem.Model.ConditionRequirement>.Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: MessagePack.MessagePackReader
    name: MessagePackReader
    nameWithType: MessagePackReader
    fullName: MessagePack.MessagePackReader
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MessagePack.MessagePackSerializerOptions
    name: MessagePackSerializerOptions
    nameWithType: MessagePackSerializerOptions
    fullName: MessagePack.MessagePackSerializerOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MessagePack.Formatters.IMessagePackFormatter`1.Deserialize(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
    name: Deserialize
    nameWithType: IMessagePackFormatter(Of ConditionRequirement).Deserialize
    fullName: MessagePack.Formatters.IMessagePackFormatter(Of MacacaGames.EffectSystem.Model.ConditionRequirement).Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: MessagePack.MessagePackReader
    name: MessagePackReader
    nameWithType: MessagePackReader
    fullName: MessagePack.MessagePackReader
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MessagePack.MessagePackSerializerOptions
    name: MessagePackSerializerOptions
    nameWithType: MessagePackSerializerOptions
    fullName: MessagePack.MessagePackSerializerOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: MessagePack.MessagePackReader
  commentId: T:MessagePack.MessagePackReader
  parent: MessagePack
  name: MessagePackReader
  nameWithType: MessagePackReader
  fullName: MessagePack.MessagePackReader
- uid: MessagePack.Formatters.IMessagePackFormatter`1.Deserialize(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
  commentId: M:MessagePack.Formatters.IMessagePackFormatter`1.Deserialize(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
  name: Deserialize(MessagePackReader, MessagePackSerializerOptions)
  nameWithType: IMessagePackFormatter<T>.Deserialize(MessagePackReader, MessagePackSerializerOptions)
  fullName: MessagePack.Formatters.IMessagePackFormatter<T>.Deserialize(MessagePack.MessagePackReader, MessagePack.MessagePackSerializerOptions)
  nameWithType.vb: IMessagePackFormatter(Of T).Deserialize(MessagePackReader, MessagePackSerializerOptions)
  fullName.vb: MessagePack.Formatters.IMessagePackFormatter(Of T).Deserialize(MessagePack.MessagePackReader, MessagePack.MessagePackSerializerOptions)
  spec.csharp:
  - uid: MessagePack.Formatters.IMessagePackFormatter`1.Deserialize(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
    name: Deserialize
    nameWithType: IMessagePackFormatter<T>.Deserialize
    fullName: MessagePack.Formatters.IMessagePackFormatter<T>.Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: MessagePack.MessagePackReader
    name: MessagePackReader
    nameWithType: MessagePackReader
    fullName: MessagePack.MessagePackReader
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MessagePack.MessagePackSerializerOptions
    name: MessagePackSerializerOptions
    nameWithType: MessagePackSerializerOptions
    fullName: MessagePack.MessagePackSerializerOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MessagePack.Formatters.IMessagePackFormatter`1.Deserialize(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
    name: Deserialize
    nameWithType: IMessagePackFormatter(Of T).Deserialize
    fullName: MessagePack.Formatters.IMessagePackFormatter(Of T).Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: MessagePack.MessagePackReader
    name: MessagePackReader
    nameWithType: MessagePackReader
    fullName: MessagePack.MessagePackReader
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MessagePack.MessagePackSerializerOptions
    name: MessagePackSerializerOptions
    nameWithType: MessagePackSerializerOptions
    fullName: MessagePack.MessagePackSerializerOptions
  - name: )
    nameWithType: )
    fullName: )
